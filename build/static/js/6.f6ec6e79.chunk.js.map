{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/Tooltip/Tooltip.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primary","ExpandableSectionButton","_ref2","onClick","expanded","_jsxs","role","children","_jsx","Text","color","fontFamily","bold","ChevronUpIcon","ChevronDownIcon","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","tokenAddresses","chainId","process","firstPart","secondPart","concat","StyledLinkExternal","LinkExternal","_templateObject2","text","DetailsSection","_ref3","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","Flex","justifyContent","style","href","Link","external","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","Image","src","alt","width","height","flexDirection","Heading","split","CommunityTag","CoreTag","variant","StyledTokenInput","input","_ref$isWarning","isWarning","shadows","warning","inset","StyledInput","Input","_ref4","mediaQueries","xs","_ref5","sm","StyledErrorMessage","_templateObject3","ModalInput","_ref6","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","position","pl","fontSize","toLocaleString","placeholder","Button","scale","mr","DepositModal","onConfirm","onDismiss","_ref$tokenName","tokenName","_useState","useState","_useState2","_slicedToArray","val","setVal","_useState3","_useState4","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","Modal","title","ModalActions","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","_useModal","useModal","onPresentDeposit","_useModal3","onPresentWithdraw","IconButton","MinusIcon","AddIcon","HarvestAction","earnings","account","useWeb3React","onReward","useHarvest","rawEarningsBalance","borderRadius","background","Action","CardActions","farm","requestedApproval","setRequestedApproval","_useFarmFromSymbol","useFarmFromSymbol","lpSymbol","lpAddresses","_useFarmUser","useFarmUser","allowance","lpAddress","getAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","t0","console","error","textTransform","pr","border","mt","UnlockButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","Math","pow","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","apy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","ml","CalculateIcon","RainbowLight","keyframes","StyledCardAccent","FCard","props","card","Divider","_templateObject4","borderColor","ExpandingWrapper","_templateObject5","FarmCard","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","toLocaleLowerCase","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","CAKE","ETH","Number","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","display","_Fragment","Skeleton","CardActionsContainer","Container","textSubtle","AprWrapper","Apr","originalValue","_ref3$hideButton","hideButton","IconImage","Farm","image","label","Amount","span","earned","textDisabled","Earned","ArrowIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","TooltipContent","tooltip","zIndices","modal","Tooltip","content","MultiplierWrapper","Multiplier","displayMultipler","toLowerCase","HelpIcon","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","_templateObject6","Staked","_templateObject7","_ref7","userData","earningsBigNumber","usePriceCakeBusd","earningsBusd","multipliedBy","_useCountUp","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","useEffect","current","lg","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","_templateObject8","ActionPanel","_ref8","details","apr","bsc","info","name","DualTag","_objectSpread","StakedAction","Label","ContentContainer","CellLayout","_ref2$label","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","ViewMode","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","setActionPanelToggled","toggleActionPanel","_useMatchBreakpoints","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","ref","row","_createElement","original","scrollIntoView","behavior","FarmTabButtons","_useRouteMatch","useRouteMatch","url","isExact","ButtonMenu","activeIndex","ButtonMenuItem","className","as","to","InputWrapper","SearchInput","setToggled","inputEl","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","CardViewIcon","TABLE","ListViewIcon","DropDownHeader","inputSecondary","DropDownListContainer","dropdown","DropDownContainer","_ref9","isOpen","css","_ref10","_ref11","boxShadow","_ref12","_ref13","DropDownList","ul","_ref14","ListItem","li","_ref15","Select","_ref16","options","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","_useState5","_useState6","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ArrowDropDownIcon","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Header","gradients","bubblegum","Farms","path","pathname","useLocation","farmsLP","useFarms","usePriceBnbBusd","query","setQuery","setViewMode","ethPriceUsd","usePriceEthBusd","sortOption","setSortOption","dispatch","useDispatch","fastRefresh","useRefresh","fetchFarmUserDataAsync","_useState7","_useState8","stackedOnly","setStackedOnly","activeFarms","filter","inactiveFarms","stackedOnlyFarms","farmsList","farmsToDisplay","_farmsLP$find","cakePriceVsBNB","find","CAKE_POOL_PID","tokenPriceVsQuote","farmsToDisplayWithAPY","tokenAmount","cakeRewardPerBlock","CAKE_PER_BLOCK","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","cakeApy","dualApy","rewardPerBlock","plus","lowercaseQuery","isActive","farmsStaked","rowData","farms","orderBy","slice","sortFarms","size","Page","Toggle","backgroundColor","checked","marginLeft","target","length","sort","a","b","Table","FlexLayout","Route","exact","renderContent"],"mappings":"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","file":"static/js/6.f6ec6e79.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"white\" fontFamily='avenir' bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text style={{fontFamily:'avenir',color:'white'}}>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal style={{color:'white'}} href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text style={{fontFamily:'avenir',color:'white'}}>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text style={{fontFamily:'avenir',color:'white'}}>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link style={{fontFamily:'avenir',color:'white'}} external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on BscScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading style={{fontFamily:'avenir',color:'white'}} mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">\r\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\r\n          </Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {TranslateString(452, 'Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          No tokens to stake:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {TranslateString(999, 'get')} {symbol}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={TranslateString(1070, 'Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {TranslateString(999, 'Get')} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={TranslateString(588, 'Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading style={{fontFamily:'avenir',color:'white'}} color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        style={{fontFamily:'avenir',color:'white',borderRadius:'2px',background:'#1214fd'}}\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const web3 = useWeb3()\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button style={{fontFamily:'avenir',borderRadius:'2px',background:'#1214fd',border:'none'}} mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(758, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text style={{fontFamily:'avenir',color:'white'}} bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          AQUA\r\n        </Text>\r\n        <Text style={{fontFamily:'avenir',color:'white'}} bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1072, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text style={{fontFamily:'avenir',color:'white'}} bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text style={{fontFamily:'avenir',color:'white'}} bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1074, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(860, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(858, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(864, 'CAKE per $1000')}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, 'Get')} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  // background: linear-gradient(\r\n  //   45deg,\r\n  //   rgba(255, 0, 0, 1) 0%,\r\n  //   rgba(255, 154, 0, 1) 10%,\r\n  //   rgba(208, 222, 33, 1) 20%,\r\n  //   rgba(79, 220, 74, 1) 30%,\r\n  //   rgba(63, 218, 216, 1) 40%,\r\n  //   rgba(47, 201, 226, 1) 50%,\r\n  //   rgba(28, 127, 238, 1) 60%,\r\n  //   rgba(95, 21, 242, 1) 70%,\r\n  //   rgba(186, 12, 248, 1) 80%,\r\n  //   rgba(251, 7, 217, 1) 90%,\r\n  //   rgba(255, 0, 0, 1) 100%\r\n  // );\r\n  // background-size: 300% 300%;\r\n  // animation: ${RainbowLight} 2s linear infinite;\r\n  // border-radius: 32px;\r\n  // filter: blur(6px);\r\n  // position: absolute;\r\n  // top: -2px;\r\n  // right: -2px;\r\n  // bottom: -2px;\r\n  // left: -2px;\r\n  // z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  // background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  // box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  provider?: ProviderType\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'AQUA'\r\n\r\n  const farmAPY =\r\n    farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  const { quoteTokenAdresses, tokenAddresses } = farm\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return (\r\n    <FCard style={{fontFamily:'avenir',borderRadius:'2px',border:'none',background:'rgba(20,30,50,0.80)'}}>\r\n      {farm.tokenSymbol === 'AQUA' && <StyledCardAccent />}\r\n      <CardHeading \r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text style={{fontFamily:'avenir',color:'white'}}>{TranslateString(736, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center',fontFamily:'avenir',color:'white'}}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text style={{fontFamily:'avenir',color:'white'}}>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text style={{fontFamily:'avenir',color:'white'}} bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport { Address, QuoteToken } from 'config/constants/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  lpLabel: string\r\n  quoteTokenAdresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  tokenAddresses: Address\r\n  cakePrice: BigNumber\r\n  originalValue: BigNumber\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  originalValue,\r\n  hideButton = false,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  return (\r\n    <Container>\r\n      {originalValue ? (\r\n        <>\r\n          <AprWrapper>{value}%</AprWrapper>\r\n          {!hideButton && (\r\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={originalValue} addLiquidityUrl={addLiquidityUrl} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <AprWrapper>{TranslateString(656, 'Loading...')}</AprWrapper>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Text, Image } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  image: string\r\n}\r\n\r\nconst IconImage = styled(Image)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const TranslateString = useI18n()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\r\n          {TranslateString(999, 'FARMING')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  // pid: number\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\r\n  const { account } = useWeb3React()\r\n  const displayBalance = earnings !== null && account ? earnings.toLocaleString() : '?'\r\n\r\n  return <Amount earned={earnings}>{displayBalance}</Amount>\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap-libs/uikit'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && 'Details'}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface TooltipProps {\r\n  content: React.ReactNode\r\n}\r\n\r\nconst TooltipContent = styled.div`\r\n  background: ${({ theme }) => theme.tooltip.background};\r\n  padding: 16px;\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.tooltip.text};\r\n  width: max-content;\r\n  display: none;\r\n  padding: 16px;\r\n  max-height: 500px;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n  position: absolute;\r\n  bottom: calc(100% + 16px);\r\n  transform: translate(34px, 0);\r\n  right: 0;\r\n  max-width: 246px;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\r\n    bottom: 0;\r\n    position: absolute;\r\n    transform: translate(-34px, 9px);\r\n    right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n      <TooltipContent>{content}</TooltipContent>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    text-align: left;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultipler = multiplier ? multiplier.toLowerCase() : '-'\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultipler}</MultiplierWrapper>\r\n      <Tooltip\r\n        content={\r\n          <div>\r\n            {TranslateString(999, 'The multiplier represents the amount of token rewards each farm gets.')}\r\n            <br />\r\n            <br />\r\n            {TranslateString(\r\n              999,\r\n              'For example, if a 1x farm was getting 1 token per block, a 40x farm would be getting 40 tokens per block.',\r\n            )}\r\n          </div>\r\n        }\r\n      >\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: number\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    text-align: left;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity = liquidity\r\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport const Subtle = styled.span`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const Earned = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport const Staked = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { useCountUp } from 'react-countup'\r\n\r\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\r\n\r\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\r\n  const { account } = useWeb3React()\r\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\r\n  const cakePrice = usePriceCakeBusd()\r\n  let earnings = null\r\n  let earningsBusd = 0\r\n  let displayBalance = '?'\r\n\r\n  if (earningsBigNumber) {\r\n    earnings = getBalanceNumber(earningsBigNumber)\r\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\r\n    displayBalance = earnings.toLocaleString()\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const TranslateString = useI18n()\r\n\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: earningsBusd,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals: 3,\r\n  })\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(earningsBusd)\r\n  }, [earningsBusd, updateValue])\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Title>AQUA</Title>\r\n        <Subtle>EARNED</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Earned>{displayBalance}</Earned>\r\n          <Staked>~{countUp}USD</Staked>\r\n        </div>\r\n        <Button\r\n          disabled={!earnings || pendingTx || !account}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {TranslateString(999, 'Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from '@pancakeswap-libs/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport useWeb3 from 'hooks/useWeb3'\r\n\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteTokenAdresses,\r\n  tokenAddresses,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const web3 = useWeb3()\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Title>{lpSymbol} </Title>\r\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance}</Earned>\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\r\n          <Title>{lpSymbol}</Title>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\r\n            {TranslateString(999, 'Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {TranslateString(999, 'Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { LinkExternal, Text } from '@pancakeswap-libs/uikit'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { communityFarms } from 'config/constants'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\nconst Container = styled.div`\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity }) => {\r\n  const farm = details\r\n\r\n  const TranslateString = useI18n()\r\n  const { quoteTokenAdresses, tokenAddresses, tokenSymbol, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const bsc = `https://bscscan.com/address/${lpAddress}`\r\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\r\n  const isCommunityFarm = communityFarms.includes(tokenSymbol)\r\n\r\n  return (\r\n    <Container>\r\n      <InfoContainer>\r\n        <StakeContainer>\r\n          <StyledLinkExternal href={`https://dex.aquaprotocol.com/#/add/${liquidityUrlPathParts}`}>\r\n            {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\r\n          </StyledLinkExternal>\r\n        </StakeContainer>\r\n        <StyledLinkExternal href={bsc}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{TranslateString(736, 'APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} />\r\n        <StakedAction {...farm} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  translationId: number\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APY: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowProps> = (props) => {\r\n  const {apr, farm, earned, multiplier, liquidity, details } = props\r\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelToggled(!actionPanelToggled)\r\n  }\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelToggled} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={TranslateString(736, 'APR')}>\r\n                        <Apr {...props.apr} hideButton={isMobile} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout\r\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\r\n                      >\r\n                        {React.createElement(cells[key], props[key])}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={TranslateString(1072, 'Earned')}>\r\n                <Earned {...props.earned} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={TranslateString(736, 'APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelToggled} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {actionPanelToggled && details && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n}\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const TranslateString = useI18n()\r\n  const { data, columns } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {TranslateString(999, 'To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst FarmTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem className='connectwalletbtn' style={{borderRadius:'2px',background:'#1214fd',fontFamily:'avenir',color:'white'}} as={Link} to={`${url}`}>\r\n          {TranslateString(1198, 'Live')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem style={{fontFamily:'avenir',borderRadius:'2px',background:'#1214fd'}} as={Link} to={`${url}/history`}>\r\n          {TranslateString(388, 'Finished')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React, { useState, useRef } from 'react'\r\nimport { Input } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 234px;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  value: string\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const inputEl = useRef(null)\r\n\r\n  return (\r\n    <Container toggled={toggled} >\r\n      <InputWrapper >\r\n        <StyledInput\r\n        style={{background:'black',border:'1px solid #2b3750',fontFamily:'avenir'}}\r\n          ref={inputEl}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Search farms\"\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap-libs/uikit'\r\nimport { ViewMode } from '../types'\r\n\r\ninterface ToogleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToogleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOption, setSelectedOption] = useState(options[0])\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    setSelectedOption(option)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(option)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer style={{background:'black'}}  isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader style={{background:'black',border:'1px solid #2b3750'}} onClick={toggling}>\r\n          <Text style={{fontFamily:'avenir',color:'white'}}>{selectedOption.label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer style={{background:'black'}}>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedOption.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <Text style={{fontFamily:'avenir',color:'white'}}>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Heading, RowType, Toggle, Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { orderBy } from 'lodash'\r\n\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport SearchInput from './components/SearchInput'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\nimport Select, { OptionProps } from './components/Select/Select'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  padding: 32px 0px;\r\n  // background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = useState(ViewMode.CARD)\r\n  const ethPriceUsd = usePriceEthBusd()\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stackedOnly, setStackedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\r\n\r\n  const stackedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        return orderBy(farms, 'apy', 'desc')\r\n      case 'multiplier':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.multiplier.slice(0, -1)), 'desc')\r\n      case 'earned':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\r\n      case 'liquidity':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n      default:\r\n        return farms\r\n    }\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmWithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n          return farm\r\n        }\r\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n        // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n        let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\r\n          apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken)\r\n        } else if (farm.dual) {\r\n          const cakeApy =\r\n            farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\r\n          const dualApy =\r\n            farm.tokenPriceVsQuote &&\r\n            new BigNumber(farm.tokenPriceVsQuote)\r\n              .times(farm.dual.rewardPerBlock)\r\n              .times(BLOCKS_PER_YEAR)\r\n              .div(farm.lpTotalInQuoteToken)\r\n\r\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\r\n        }\r\n\r\n        let liquidity = farm.lpTotalInQuoteToken\r\n\r\n        if (!farm.lpTotalInQuoteToken) {\r\n          liquidity = null\r\n        }\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          liquidity = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n        }\r\n        if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          liquidity = cakePrice.times(farm.lpTotalInQuoteToken)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          liquidity = ethPriceUsd.times(farm.lpTotalInQuoteToken)\r\n        }\r\n\r\n        return { ...farm, apy, liquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = query.toLowerCase()\r\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\r\n          if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\r\n            return true\r\n          }\r\n\r\n          return false\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPY\r\n    },\r\n    [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const isActive = !pathname.includes('history')\r\n  let farmsStaked = []\r\n  if (isActive) {\r\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\r\n  } else {\r\n    farmsStaked = farmsList(inactiveFarms)\r\n  }\r\n\r\n  farmsStaked = sortFarms(farmsStaked)\r\n\r\n  const rowData = farmsStaked.map((farm) => {\r\n    const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value:\r\n          farm.apy &&\r\n          farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        quoteTokenAdresses,\r\n        quoteTokenSymbol,\r\n        tokenAddresses,\r\n        cakePrice,\r\n        originalValue: farm.apy,\r\n      },\r\n      farm: {\r\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n      },\r\n      earned: {\r\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\r\n        // pid: farm.pid,  //me commented thids due to build error\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard \r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                ethPrice={ethPriceUsd}\r\n                account={account}\r\n                removed={false}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                ethPrice={ethPriceUsd}\r\n                account={account}\r\n                removed\r\n              />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Heading style={{fontFamily:'avenir',color:'white'}} as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {TranslateString(999, 'Farms')}\r\n        </Heading>\r\n        <Heading style={{fontFamily:'avenir',color:'white'}} size=\"lg\" color=\"text\">\r\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\r\n        </Heading>\r\n      </Header>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle style={{backgroundColor:'black'}} checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\r\n              <Text style={{fontFamily:'avenir',color:'white'}}> {TranslateString(1116, 'Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text style={{fontFamily:'avenir',color:'white'}}>SORT BY</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: 'Hot',\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: 'APR',\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: 'Multiplier',\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: 'Earned',\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: 'Liquidity',\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text style={{fontFamily:'avenir',color:'white'}}>SEARCH</Text>\r\n              <SearchInput onChange={handleChangeQuery} value={query} />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {/* <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}