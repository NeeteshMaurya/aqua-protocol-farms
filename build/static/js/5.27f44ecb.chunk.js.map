{"version":3,"sources":["hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","_useState3","useState","_useState4","_slicedToArray","totalSupply","setTotalSupply","useEffect","_fetchTotalSupply","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","cakeContract","supply","wrap","_context2","prev","next","getCakeContract","methods","call","sent","BigNumber","stop","apply","arguments","fetchTotalSupply","useBurnedBalance","tokenAddress","_useState5","_useState6","balance","setBalance","web3","useWeb3","fetchBalance","_ref2","_callee3","contract","res","_context3","getBep20Contract","balanceOf","useTokenBalance","_useState","_useState2","account","useWeb3React","fastRefresh","_ref","_callee","_context","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","theme","colors","primary","ExpandableSectionButton","onClick","expanded","_jsxs","role","children","_jsx","Text","color","fontFamily","bold","ChevronUpIcon","ChevronDownIcon","defaultProps","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","multi","itf","i","_loop","calldata","_yield$multi$methods$2","returnData","getWeb3NoAccount","eth","Contract","MultiCallAbi","getMulticallAddress","Interface","length","newCalls","_yield$multi$methods$","slice","map","toLowerCase","encodeFunctionData","aggregate","concat","index","decodeFunctionResult","delegateYield","abrupt","_x","_x2","multiBuy","lotteryContract","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","t0","console","error","_x3","_x4","_x5","_x6","getTickets","_ref3","_callee4","ticketsContract","customLotteryNum","issueIndex","calls1","tokenIds","calls2","ticketIssues","finalTokenids","calls3","tickets","_context5","getTicketsAmount","Array","a","options","address","ticketAbi","id","forEach","_ref4","ticketIssue","_context4","eq","push","_x11","_x12","getLotteryStatus","_x7","_x8","_x9","_x10","_ref5","_callee5","_context6","_x13","_x14","multiClaim","_ref6","_callee6","claimedStatus","unClaimedIds","rewards","finanltokenIds","_context7","filter","lotteryAbi","r","_x15","_x16","_x17","getTotalClaim","_ref7","_callee8","drawed","calls4","claim","_context9","_ref8","_callee7","_context8","_x21","_x22","reduce","p","c","sum","_x18","_x19","_x20","getTotalRewards","_ref9","_callee9","_context10","_x23","getMax","_ref10","_callee10","_context11","maxNumber","_x24","getLotteryIssueIndex","_ref11","_callee11","_context12","_x25","_ref12","_callee12","_context13","_x26","getMatchingRewardLength","_ref13","_callee13","matchNumber","amount","_context14","historyAmount","LOTTERY_TICKET_PRICE","_x27","_x28","getWinningNumbers","_ref14","_callee14","numbers","_i","_context15","parseInt","historyNumbers","t1","t2","winningNumbers","t3","_x29","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","useLottery","fetchLotteryStatus","state","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","nextTicketSaleTime","getNextTicketSaleTime","msUntilNextTicketSale","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","_templateObject2","BottomTextWrapper","_templateObject3","StyledPrimaryText","_templateObject4","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","Progress","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","size","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","_templateObject5","lg","RightWrapper","_templateObject6","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","_useState7","_useState8","claimLoading","setClaimLoading","useLotteryTicket","useCallback","useWinningNumbers","_useState9","_useState10","winngNumbers","setWinningNumbers","useMatchingRewardLength","_useState11","_useState12","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","undefined","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","Modal","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","_useTotalClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","_useModal","useModal","MyTicketsModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","Won","_Fragment","style","marginRight","width","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","CardBody","StyledCardBody","StyledHeading","UnlockWalletCard","Ticket","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","Flex","alignItems","Input","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","_useMultiBuyLottery","handleBuy","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","_numbers","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","allowance","setAllowance","useCake","fetchAllowance","getLotteryAddress","useLotteryAllowance","cakeBalance","getCakeAddress","ticketsLength","_useModal3","PurchaseWarningModal","_useModal5","tokenName","onPresentBuy","_useApproval","toNumber","isSecondCard","CardHeader","TicketCountWrapper","_ref$isSecondCard","TicketRound","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","_ref$lotteryPrizeAmou","lotteryPrizeAmount","_ref$pastDraw","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","justifyContent","height","Skeleton","fontWeight","PancakeRoundIcon","CardFooter","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","_templateObject7","Column","_templateObject8","CenteredText","_templateObject9","CenteredTextWithPadding","_templateObject10","TicketNumberBox","_templateObject11","RabbitBox","_templateObject12","RabbitBoxSmall","_templateObject13","StyledCardHeader","_templateObject14","CardWrapper","_templateObject15","_templateObject16","_templateObject17","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","data","fetch","json","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","Icon","source","excluded","key","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","_objectWithoutProperties","_excluded","_objectSpread","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","_formatLotteryDate","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","oneTicketMatches","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","fetchRecentLotteryData","roundData","finish","PastLotteryRoundViewer","isInitialized","setState","_useGetRecentLotteryR","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","_useContext","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","Suspense","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","getInitialLotteryIndex","previousLotteryNumber","Page","ButtonMenu","onItemClick","ButtonMenuItem","Divider","Provider"],"mappings":"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","file":"static/js/5.27f44ecb.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"white\" fontFamily='avenir' bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { LOTTERY_TICKET_PRICE } from 'config'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIndex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return new BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIndex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\r\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\r\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\r\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(660, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              CAKE\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(1056, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { useCallback, useState } from 'react'\r\nimport { useLotteryApprove } from './useApprove'\r\n\r\nexport const useApproval = (onPresentApprove: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove } = useLotteryApprove()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport default useApproval\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, InputProps } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        <StyledTokenAdornmentWrapper>\r\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n          <StyledSpacer />\r\n          <div>\r\n            <Button size=\"sm\" onClick={onSelectMax}>\r\n              {TranslateString(452, 'Max')}\r\n            </Button>\r\n          </div>\r\n        </StyledTokenAdornmentWrapper>\r\n      </Flex>\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\r\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * LOTTERY_TICKET_PRICE\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          width=\"100%\"\r\n          disabled={\r\n            pendingTx ||\r\n            parseInt(val) > Number(maxTickets) ||\r\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\r\n            parseInt(val) < 1\r\n          }\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button width=\"100%\" onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button width=\"100%\" disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(494, 'Approve CAKE')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          width=\"100%\"\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { useCake } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance()\r\n    }\r\n  }, [account, cakeContract, fastRefresh])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(870, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(724, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  oneTicketMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(756, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(754, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(752, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\r\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(722, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(632, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match1Ticket: number | null\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n  poolMatch1: number | null\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(\"getLotteryRoundData Error\")\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\r\n              {TranslateString(744, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match1Ticket,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            oneTicketMatches={match1Ticket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(750, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}