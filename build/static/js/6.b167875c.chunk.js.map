{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/Tooltip/Tooltip.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primary","ExpandableSectionButton","_ref2","onClick","expanded","_jsxs","role","children","_jsx","Text","color","bold","ChevronUpIcon","ChevronDownIcon","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","tokenAddresses","chainId","process","firstPart","secondPart","concat","StyledLinkExternal","LinkExternal","_templateObject2","text","DetailsSection","_ref3","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","Flex","justifyContent","href","Link","external","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","Image","src","alt","width","height","flexDirection","Heading","split","CommunityTag","CoreTag","variant","StyledTokenInput","input","_ref$isWarning","isWarning","shadows","warning","inset","StyledInput","Input","_ref4","mediaQueries","xs","_ref5","sm","StyledErrorMessage","_templateObject3","ModalInput","_ref6","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","style","position","pl","fontSize","toLocaleString","placeholder","Button","scale","mr","DepositModal","onConfirm","onDismiss","_ref$tokenName","tokenName","_useState","useState","_useState2","_slicedToArray","val","setVal","_useState3","_useState4","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","Modal","title","ModalActions","disabled","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","_useModal","useModal","onPresentDeposit","_useModal3","onPresentWithdraw","IconButton","MinusIcon","AddIcon","HarvestAction","earnings","account","useWeb3React","onReward","useHarvest","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","_useFarmFromSymbol","useFarmFromSymbol","lpSymbol","lpAddresses","_useFarmUser","useFarmUser","allowance","lpAddress","getAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","t0","console","error","textTransform","pr","mt","UnlockButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","Math","pow","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","apy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","ml","CalculateIcon","RainbowLight","keyframes","StyledCardAccent","FCard","props","card","background","Divider","_templateObject4","borderColor","ExpandingWrapper","_templateObject5","FarmCard","bnbPrice","ethPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","toLocaleLowerCase","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","CAKE","ETH","Number","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","display","_Fragment","Skeleton","CardActionsContainer","Container","textSubtle","AprWrapper","Apr","originalValue","_ref3$hideButton","hideButton","IconImage","Farm","image","label","Amount","span","earned","textDisabled","Earned","ArrowIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","TooltipContent","tooltip","zIndices","modal","Tooltip","content","MultiplierWrapper","Multiplier","displayMultipler","toLowerCase","HelpIcon","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","_templateObject6","Staked","_templateObject7","_ref7","userData","earningsBigNumber","usePriceCakeBusd","earningsBusd","multipliedBy","_useCountUp","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","useEffect","current","lg","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","_templateObject8","ActionPanel","_ref8","details","apr","bsc","info","name","DualTag","_objectSpread","StakedAction","Label","ContentContainer","CellLayout","_ref2$label","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","ViewMode","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","setActionPanelToggled","toggleActionPanel","_useMatchBreakpoints","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","ref","row","_createElement","original","scrollIntoView","behavior","FarmTabButtons","_useRouteMatch","useRouteMatch","url","isExact","ButtonMenu","activeIndex","ButtonMenuItem","as","to","InputWrapper","SearchInput","setToggled","inputEl","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","CardViewIcon","TABLE","ListViewIcon","DropDownHeader","inputSecondary","DropDownListContainer","dropdown","DropDownContainer","_ref9","isOpen","css","_ref10","_ref11","boxShadow","_ref12","_ref13","DropDownList","ul","_ref14","ListItem","li","_ref15","Select","_ref16","options","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","_useState5","_useState6","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ArrowDropDownIcon","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Header","gradients","bubblegum","Farms","path","pathname","useLocation","farmsLP","useFarms","usePriceBnbBusd","query","setQuery","setViewMode","ethPriceUsd","usePriceEthBusd","sortOption","setSortOption","dispatch","useDispatch","fastRefresh","useRefresh","fetchFarmUserDataAsync","_useState7","_useState8","stackedOnly","setStackedOnly","activeFarms","filter","inactiveFarms","stackedOnlyFarms","farmsList","farmsToDisplay","_farmsLP$find","cakePriceVsBNB","find","CAKE_POOL_PID","tokenPriceVsQuote","farmsToDisplayWithAPY","tokenAmount","cakeRewardPerBlock","CAKE_PER_BLOCK","poolWeight","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","cakeApy","dualApy","rewardPerBlock","plus","lowercaseQuery","isActive","farmsStaked","rowData","farms","orderBy","slice","sortFarms","size","Page","Toggle","checked","marginLeft","target","length","sort","a","b","Table","FlexLayout","Route","exact","renderContent"],"mappings":"uKASMA,EAAUC,IAAOC,IAAGC,MAAAC,YAAA,oIAOd,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,OAAO,IAIzCC,EAAkE,SAAHC,GAA+B,IAAzBC,EAAOD,EAAPC,QAASC,EAAQF,EAARE,SAClF,OACEC,eAACb,EAAO,CAAC,aAAW,kCAAkCc,KAAK,SAASH,QAAS,kBAAMA,GAAS,EAACI,SAAA,CAC3FC,cAACC,IAAI,CAACC,MAAM,UAAUC,MAAI,EAAAJ,SACvBH,EAAW,OAAS,YAEtBA,EAAWI,cAACI,IAAa,IAAMJ,cAACK,IAAe,MAGtD,EAEAZ,EAAwBa,aAAe,CACrCV,UAAU,GAGGH,K,2eC1BAc,GAPkB,SAAHlB,GAAgD,IAA1CmB,EAAkBnB,EAAlBmB,mBAAoBC,EAAcpB,EAAdoB,eAChDC,EAAUC,SACVC,EAAYJ,EAAmBE,GAC/BG,EAAaJ,EAAeC,GAClC,MAAM,GAANI,OAAUF,EAAS,KAAAE,OAAID,EACzB,E,QCMM7B,GAAUC,KAAOC,IAAGC,MAAAC,aAAA,+BAIpB2B,GAAqB9B,aAAO+B,KAAP/B,CAAoBgC,MAAA7B,aAAA,kNAGpC,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO2B,IAAI,IAQ/B,SAAAxB,GAAQ,OAAAA,EAALJ,MAAkBC,OAAOC,OAAO,IAkChC2B,GA9B0C,SAAHC,GAM/C,IALLC,EAAcD,EAAdC,eACAC,EAAOF,EAAPE,QACAC,EAAkBH,EAAlBG,mBACAC,EAAOJ,EAAPI,QACAC,EAAeL,EAAfK,gBAEMC,EAAkBC,eAExB,OACE9B,gBAACb,GAAO,CAAAe,SAAA,CACNF,gBAAC+B,KAAI,CAACC,eAAe,gBAAe9B,SAAA,CAClCF,gBAACI,KAAI,CAAAF,SAAA,CAAE2B,EAAgB,IAAK,SAAS,OACrC1B,eAACe,GAAkB,CAACe,KAAML,EAAgB1B,SAAEyB,QAE5CF,GACAzB,gBAAC+B,KAAI,CAACC,eAAe,gBAAe9B,SAAA,CAClCF,gBAACI,KAAI,CAAAF,SAAA,CAAE2B,EAAgB,GAAI,mBAAmB,OAC9C1B,eAACC,KAAI,CAAAF,SAAEwB,OAGXvB,eAAC4B,KAAI,CAACC,eAAe,aAAY9B,SAC/BC,eAAC+B,KAAI,CAACC,UAAQ,EAACF,KAAMT,EAAgBlB,MAAM,EAAMJ,SAC9C2B,EAAgB,IAAK,yBAKhC,E,UC/CM1C,GAAUC,aAAO2C,KAAP3C,CAAYE,MAAAC,aAAA,gDAMtB6C,GAAgBhD,aAAOiD,KAAPjD,CAAWgC,MAAA7B,aAAA,+BAyBlB+C,GArBuC,SAAH9C,GAM5C,IALLmC,EAAOnC,EAAPmC,QACAY,EAAU/C,EAAV+C,WACAC,EAAehD,EAAfgD,gBACAC,EAASjD,EAATiD,UACAC,EAAWlD,EAAXkD,YAEA,OACE1C,gBAACb,GAAO,CAAC6C,eAAe,gBAAgBW,WAAW,SAASC,GAAG,OAAM1C,SAAA,CACnEC,eAAC0C,KAAK,CAACC,IAAG,iBAAA7B,OAAmBwB,EAAS,QAAQM,IAAKL,EAAaM,MAAO,GAAIC,OAAQ,KACnFjD,gBAAC+B,KAAI,CAACmB,cAAc,SAASP,WAAW,WAAUzC,SAAA,CAChDC,eAACgD,KAAO,CAACP,GAAG,MAAK1C,SAAEyB,EAAQyB,MAAM,KAAK,KACtCpD,gBAAC+B,KAAI,CAACC,eAAe,SAAQ9B,SAAA,CAC1BsC,EAAkBrC,eAACkD,KAAY,IAAMlD,eAACmD,KAAO,IAC9CnD,eAACiC,GAAa,CAACmB,QAAQ,YAAWrD,SAAEqC,YAK9C,E,6FClBMiB,GAAmBpE,KAAOC,IAAGC,MAAAC,aAAA,wLAGb,SAAAM,GAAQ,OAAAA,EAALJ,MAAkBC,OAAO+D,KAAK,IAXlC,SAAHjE,GAAsC,IAADkE,EAAAlE,EAA/BmE,iBAAS,IAAAD,GAAQA,EAAEjE,EAAKD,EAALC,MACzC,OAAIkE,EACKlE,EAAMmE,QAAQC,QAGhBpE,EAAMmE,QAAQE,KACvB,IAQW,SAAAvC,GAAQ,OAAAA,EAAL9B,MAAkBC,OAAO2B,IAAI,IAKrC0C,GAAc3E,aAAO4E,KAAP5E,CAAagC,MAAA7B,aAAA,wJAM7B,SAAA0E,GAAQ,OAAAA,EAALxE,MAAkByE,aAAaC,EAAE,IAIpC,SAAAC,GAAQ,OAAAA,EAAL3E,MAAkByE,aAAaG,EAAE,IAKlCC,GAAqBlF,aAAOgB,KAAPhB,CAAYmF,MAAAhF,aAAA,qFAmDxBiF,GA3C+B,SAAHC,GAQpC,IAPLC,EAAGD,EAAHC,IACAC,EAAMF,EAANE,OACAC,EAAQH,EAARG,SACAC,EAAWJ,EAAXI,YACAC,EAAKL,EAALK,MACAlD,EAAe6C,EAAf7C,gBACAmD,EAAUN,EAAVM,WAEMlD,EAAkBC,eAClBkD,EAAwB,MAARN,IAAgBA,EAEhCO,EAAiBD,EAAgB,IAAME,WAAWR,GAAKS,QAAQ,GAErE,OACEnF,gBAAA,OAAKoF,MAAO,CAAEC,SAAU,YAAanF,SAAA,CACnCF,gBAACwD,GAAgB,CAACG,UAAWqB,EAAc9E,SAAA,CACzCF,gBAAC+B,KAAI,CAACC,eAAe,gBAAgBsD,GAAG,OAAMpF,SAAA,CAC5CC,eAACC,KAAI,CAACmF,SAAS,OAAMrF,SAAE6E,IACvB/E,gBAACI,KAAI,CAACmF,SAAS,OAAMrF,SAAA,CAClB2B,EAAgB,KAAM,WAAW,KAAGoD,EAAeO,uBAGxDxF,gBAAC+B,KAAI,CAACY,WAAW,WAAWX,eAAe,eAAc9B,SAAA,CACvDC,eAAC4D,GAAW,CAACa,SAAUA,EAAUa,YAAY,IAAIX,MAAOA,IACxD3E,eAACuF,KAAM,CAACC,MAAM,KAAK7F,QAAS+E,EAAae,GAAG,MAAK1F,SAC9C2B,EAAgB,IAAK,SAExB1B,eAACC,KAAI,CAACmF,SAAS,OAAMrF,SAAEyE,UAG1BK,GACChF,gBAACsE,GAAkB,CAACiB,SAAS,OAAOlF,MAAM,UAASH,SAAA,CAAC,sBAC9B,IACpBF,gBAACkC,KAAI,CAACqD,SAAS,OAAOjF,MAAM,EAAO2B,KAAML,EAAiBO,UAAQ,EAAC9B,MAAM,UAASH,SAAA,CAC/E2B,EAAgB,IAAK,OAAO,IAAE8C,UAM3C,EC7BekB,GAtDmC,SAAHrG,GAAwE,IAAlEkF,EAAGlF,EAAHkF,IAAKoB,EAAStG,EAATsG,UAAWC,EAASvG,EAATuG,UAASC,EAAAxG,EAAEyG,iBAAS,IAAAD,EAAG,GAAEA,EAAEpE,EAAepC,EAAfoC,gBAC9FsE,EAAsBC,oBAAS,IAAGC,EAAAC,aAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAClBI,EAAkCL,qBAAS,GAAMM,EAAAJ,aAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxB5E,EAAkBC,eAClB8E,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsBpC,EAC/B,GAAG,CAACA,IAEEqC,EAAeC,wBACnB,SAACC,GACCV,EAAOU,EAAEC,cAAcpC,MACzB,GACA,CAACyB,IAGGY,EAAkBH,wBAAY,WAClCT,EAAOK,EACT,GAAG,CAACA,EAAaL,IAEjB,OACEvG,gBAACoH,KAAK,CAACC,MAAOxF,EAAgB,KAAM,mBAAoBkE,UAAWA,EAAU7F,SAAA,CAC3EC,eAACqE,GAAU,CACTM,MAAOwB,EACPzB,YAAasC,EACbvC,SAAUmC,EACVrC,IAAKkC,EACLjC,OAAQsB,EACRrE,gBAAiBA,EACjBmD,WAAYlD,EAAgB,KAAM,WAEpC7B,gBAACsH,KAAY,CAAApH,SAAA,CACXC,eAACuF,KAAM,CAACnC,QAAQ,YAAYzD,QAASiG,EAAW/C,MAAM,OAAM9C,SACzD2B,EAAgB,IAAK,YAExB1B,eAACuF,KAAM,CACL1C,MAAM,OACNuE,SAAUb,GAA6B,MAAhBE,GAA+B,MAARN,EAC9CxG,QAAO0H,aAAAC,eAAAC,MAAE,SAAAC,IAAA,OAAAF,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBpB,GAAa,GAAKkB,EAAAE,KAAA,EACZjC,EAAUQ,GAAI,OACpBK,GAAa,GACbZ,IAAW,wBAAA8B,EAAAG,OAAA,GAAAL,EAAA,KACXzH,SAEDwG,EAAY7E,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,gBAGrF7B,gBAACmB,KAAY,CAACc,KAAML,EAAiBwD,MAAO,CAAE6C,UAAW,UAAW/H,SAAA,CACjE2B,EAAgB,IAAK,OAAO,IAAEoE,OAIvC,ECHeiC,GAlDqC,SAAH1I,GAAuD,IAAjDsG,EAAStG,EAATsG,UAAWC,EAASvG,EAATuG,UAAWrB,EAAGlF,EAAHkF,IAAGsB,EAAAxG,EAAEyG,iBAAS,IAAAD,EAAG,GAAEA,EAC9FE,EAAsBC,oBAAS,IAAGC,EAAAC,aAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAClBI,EAAkCL,qBAAS,GAAMM,EAAAJ,aAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxB5E,EAAkBC,eAClB8E,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsBpC,EAC/B,GAAG,CAACA,IAEEqC,EAAeC,wBACnB,SAACC,GACCV,EAAOU,EAAEC,cAAcpC,MACzB,GACA,CAACyB,IAGGY,EAAkBH,wBAAY,WAClCT,EAAOK,EACT,GAAG,CAACA,EAAaL,IAEjB,OACEvG,gBAACoH,KAAK,CAACC,MAAOxF,EAAgB,KAAM,qBAAsBkE,UAAWA,EAAU7F,SAAA,CAC7EC,eAACqE,GAAU,CACTK,YAAasC,EACbvC,SAAUmC,EACVjC,MAAOwB,EACP5B,IAAKkC,EACLjC,OAAQsB,EACRlB,WAAYlD,EAAgB,IAAK,aAEnC7B,gBAACsH,KAAY,CAAApH,SAAA,CACXC,eAACuF,KAAM,CAACnC,QAAQ,YAAYzD,QAASiG,EAAW/C,MAAM,OAAM9C,SACzD2B,EAAgB,IAAK,YAExB1B,eAACuF,KAAM,CACL6B,SAAUb,EACV5G,QAAO0H,aAAAC,eAAAC,MAAE,SAAAC,IAAA,OAAAF,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBpB,GAAa,GAAKkB,EAAAE,KAAA,EACZjC,EAAUQ,GAAI,OACpBK,GAAa,GACbZ,IAAW,wBAAA8B,EAAAG,OAAA,GAAAL,EAAA,KAEb3E,MAAM,OAAM9C,SAEXwG,EAAY7E,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,kBAK3F,EC5CMsG,GAAoB/I,KAAOC,IAAGC,MAAAC,aAAA,4DAmDrB6I,GA5CqC,SAAH5I,GAM1C,IALL6I,EAAa7I,EAAb6I,cACAC,EAAY9I,EAAZ8I,aACArC,EAASzG,EAATyG,UACAsC,EAAG/I,EAAH+I,IACA3G,EAAepC,EAAfoC,gBAEMC,EAAkBC,eAChB0G,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UAEFE,EAAmBC,aAAiBR,GACpCpD,EAAiB2D,EAAiBpD,iBAExCsD,EAA2BC,aACzB5I,eAAC0F,GAAY,CAACnB,IAAK4D,EAAcxC,UAAW0C,EAASvC,UAAWA,EAAWrE,gBAAiBA,KADvFoH,EAEN3C,aAAAyC,EAAA,GAFsB,GAGvBG,EAA4BF,aAC1B5I,eAAC+H,GAAa,CAACxD,IAAK2D,EAAevC,UAAW4C,EAAWzC,UAAWA,KAD/DiD,EAEN7C,aAAA4C,EAAA,GAFuB,GAmBxB,OACEjJ,gBAAC+B,KAAI,CAACC,eAAe,gBAAgBW,WAAW,SAAQzC,SAAA,CACtDC,eAACgD,KAAO,CAAC9C,MAA4B,IAArBuI,EAAyB,eAAiB,OAAO1I,SAAE+E,IAhBzC,IAArB2D,EACLzI,eAACuF,KAAM,CAAC5F,QAASkJ,EAAiB9I,SAAE2B,EAAgB,IAAK,cAEzD7B,gBAACmI,GAAiB,CAAAjI,SAAA,CAChBC,eAACgJ,KAAU,CAAC5F,QAAQ,WAAWzD,QAASoJ,EAAmBtD,GAAG,MAAK1F,SACjEC,eAACiJ,KAAS,CAAC/I,MAAM,UAAU2C,MAAM,WAEnC7C,eAACgJ,KAAU,CAAC5F,QAAQ,WAAWzD,QAASkJ,EAAiB9I,SACvDC,eAACkJ,KAAO,CAAChJ,MAAM,UAAU2C,MAAM,gBAYzC,E,UC7BesG,GA1BuC,SAAH9J,GAA2B,IAArB+J,EAAQ/J,EAAR+J,SAAUhB,EAAG/I,EAAH+I,IACzDiB,EAAYC,eAAZD,QACF3H,EAAkBC,eACxBoE,EAAkCC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAA1CQ,EAASN,EAAA,GAAEO,EAAYP,EAAA,GACtBsD,EAAaC,aAAWpB,GAAxBmB,SAEFE,EAAqBJ,EAAUX,aAAiBU,GAAY,EAC5DtE,EAAiB2E,EAAmBpE,iBAE1C,OACExF,gBAAC+B,KAAI,CAACa,GAAG,MAAMZ,eAAe,gBAAgBW,WAAW,SAAQzC,SAAA,CAC/DC,eAACgD,KAAO,CAAC9C,MAA8B,IAAvBuJ,EAA2B,eAAiB,OAAO1J,SAAE+E,IACrE9E,eAACuF,KAAM,CACL6B,SAAiC,IAAvBqC,GAA4BlD,EACtC5G,QAAO0H,aAAAC,eAAAC,MAAE,SAAAC,IAAA,OAAAF,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBpB,GAAa,GAAKkB,EAAAE,KAAA,EACZ2B,IAAU,OAChB/C,GAAa,GAAM,wBAAAkB,EAAAG,OAAA,GAAAL,EAAA,KACnBzH,SAED2B,EAAgB,IAAK,eAI9B,ECrBMgI,GAASzK,KAAOC,IAAGC,MAAAC,aAAA,gCA+EVuK,GAjEqC,SAAHtK,GAA4C,IAAtCuK,EAAIvK,EAAJuK,KAAMP,EAAOhK,EAAPgK,QAAS5H,EAAepC,EAAfoC,gBAC9DC,EAAkBC,eACxBoE,EAAkDC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAA1D8D,EAAiB5D,EAAA,GAAE6D,EAAoB7D,EAAA,GAC9C8D,EAA6BC,aAAkBJ,EAAKK,UAA5C7B,EAAG2B,EAAH3B,IAAK8B,EAAWH,EAAXG,YACbC,EAA6DC,aAAYhC,GAAjEiC,EAASF,EAATE,UAAWlC,EAAYgC,EAAZhC,aAAcD,EAAaiC,EAAbjC,cAAekB,EAAQe,EAARf,SAC1CkB,EAAYC,aAAWL,GACvBM,EAASZ,EAAKK,SAASQ,cACvBC,EAAarB,GAAWgB,GAAaA,EAAUM,cAAc,GAC7DC,EAAOC,eAEPC,EAAaC,aAAiBT,EAAWM,GAEvCI,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBrE,uBAAWQ,aAAAC,eAAAC,MAAC,SAAAC,IAAA,OAAAF,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,OAFIF,EAAAC,KAAA,EAE9BmC,GAAqB,GAAKpC,EAAAE,KAAA,EACpBoD,IAAW,OACjBlB,GAAqB,GAAMpC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyD,GAAAzD,EAAA,SAE3B0D,QAAQC,MAAK3D,EAAAyD,IAAG,yBAAAzD,EAAAG,OAAA,GAAAL,EAAA,kBAEjB,CAACwD,IAkBJ,OACEnL,gBAAC6J,GAAM,CAAA3J,SAAA,CACLF,gBAAC+B,KAAI,CAAA7B,SAAA,CACHC,eAACC,KAAI,CAACE,MAAI,EAACmL,cAAc,YAAYpL,MAAM,YAAYkF,SAAS,OAAOmG,GAAG,MAAKxL,SACG,SAGlFC,eAACC,KAAI,CAACE,MAAI,EAACmL,cAAc,YAAYpL,MAAM,aAAakF,SAAS,OAAMrF,SACpE2B,EAAgB,KAAM,eAG3B1B,eAACmJ,GAAa,CAACC,SAAUA,EAAUhB,IAAKA,IACxCvI,gBAAC+B,KAAI,CAAA7B,SAAA,CACHC,eAACC,KAAI,CAACE,MAAI,EAACmL,cAAc,YAAYpL,MAAM,YAAYkF,SAAS,OAAOmG,GAAG,MAAKxL,SAC5EyK,IAEHxK,eAACC,KAAI,CAACE,MAAI,EAACmL,cAAc,YAAYpL,MAAM,aAAakF,SAAS,OAAMrF,SACpE2B,EAAgB,KAAM,eAGzB2H,EAnCGqB,EACL1K,eAACiI,GAAW,CACVC,cAAeA,EACfC,aAAcA,EACdrC,UAAW0E,EACXpC,IAAKA,EACL3G,gBAAiBA,IAGnBzB,eAACuF,KAAM,CAACiG,GAAG,MAAM3I,MAAM,OAAOuE,SAAUyC,EAAmBlK,QAASuL,EAAcnL,SAC/E2B,EAAgB,IAAK,sBAyBZ1B,eAACyL,KAAY,CAACD,GAAG,MAAM3I,MAAM,WAG/C,EC3Fa6I,GAAwC,SAAHrM,GAA8C,IAF1EsM,EAEkCC,EAAYvM,EAAZuM,aAIhDC,EAJqExM,EAAPyM,QAIrC,IACzBC,EAAsBH,EAHJ,IAKlBI,EAAY,IAPoE3M,EAAT4M,UAUvEC,EAAcF,EAASG,KAAAC,IAAI,EAAIP,EARb,QAQmEE,GAI3F,OAhBoBJ,EAeGO,EAAcF,EAfNG,KAAKE,MAAe,IAATV,GAAgB,GAiB5D,EAEaW,GAAc,SAAH5M,GAEtB,OAFwCA,EAAZ6M,aAA4B7M,EAAd8M,eACW,KACnCxH,QAAQ,EAC5B,ECPMyH,GAAOxN,KAAOC,IAAGC,MAAAC,aAAA,sIAOjBsN,GAAWzN,KAAOC,IAAG+B,MAAA7B,aAAA,oCAIrBuN,GAAc1N,aAAOgB,KAAPhB,CAAYmF,MAAAhF,aAAA,uDAuGjBwN,GAlG+C,SAAHvN,GAMpD,IALLuG,EAASvG,EAATuG,UACApE,EAAOnC,EAAPmC,QACAyK,EAAS5M,EAAT4M,UACAY,EAAGxN,EAAHwN,IACApL,EAAepC,EAAfoC,gBAEMC,EAAkBC,eAClBmK,EAAUe,EAAIC,MAAM,IAAIC,KAAU,MAAMC,WACxCC,EAAgC,IAAOhB,EAAUe,WAEjDE,EAA0BxB,GAAsC,CAAEE,aAAc,EAAGE,UAASG,cAC5FkB,EAA0BzB,GAAsC,CAAEE,aAAc,EAAGE,UAASG,cAC5FmB,EAA2B1B,GAAsC,CAAEE,aAAc,GAAIE,UAASG,cAC9FoB,EAA4B3B,GAAsC,CAAEE,aAAc,IAAKE,UAASG,cAEtG,OACEpM,gBAACoH,KAAK,CAACC,MAAM,MAAMtB,UAAWA,EAAU7F,SAAA,CACtCF,gBAAC4M,GAAI,CAAA1M,SAAA,CACHC,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAACmF,SAAS,OAAOjF,MAAI,EAACD,MAAM,aAAaoL,cAAc,YAAY7I,GAAG,OAAM1C,SAC9E2B,EAAgB,IAAK,iBAG1B1B,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAACmF,SAAS,OAAOjF,MAAI,EAACD,MAAM,aAAaoL,cAAc,YAAY7I,GAAG,OAAM1C,SAC9E2B,EAAgB,IAAK,WAG1B1B,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAACmF,SAAS,OAAOjF,MAAI,EAACD,MAAM,aAAaoL,cAAc,YAAY7I,GAAG,OAAM1C,SAC9E2B,EAAgB,IAAK,sBAI1B1B,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAC,SAERC,eAAC0M,GAAQ,CAAA3M,SACPF,gBAACI,KAAI,CAAAF,SAAA,CACFuM,GAAY,CAAEC,aAAcW,EAAyBV,eAAgBS,IAAiC,SAG3GjN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAEmN,MAGTlN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAC,SAERC,eAAC0M,GAAQ,CAAA3M,SACPF,gBAACI,KAAI,CAAAF,SAAA,CACFuM,GAAY,CAAEC,aAAcY,EAAyBX,eAAgBS,IAAiC,SAG3GjN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAEoN,MAGTnN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAC,UAERC,eAAC0M,GAAQ,CAAA3M,SACPF,gBAACI,KAAI,CAAAF,SAAA,CACFuM,GAAY,CAAEC,aAAca,EAA0BZ,eAAgBS,IAAiC,SAG5GjN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAEqN,MAGTpN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAC,gBAERC,eAAC0M,GAAQ,CAAA3M,SACPF,gBAACI,KAAI,CAAAF,SAAA,CACFuM,GAAY,CAAEC,aAAcc,EAA2Bb,eAAgBS,IAAiC,SAG7GjN,eAAC0M,GAAQ,CAAA3M,SACPC,eAACC,KAAI,CAAAF,SAAEsN,SAGXrN,eAAC2M,GAAW,CAACvH,SAAS,OAAOlF,MAAM,aAAYH,SAC5C2B,EACC,IACA,sKAGJ1B,eAAC4B,KAAI,CAACC,eAAe,SAAQ9B,SAC3BF,gBAACmB,KAAY,CAACc,KAAML,EAAgB1B,SAAA,CACjC2B,EAAgB,IAAK,OAAO,IAAEF,SAKzC,EClGe8L,GAjB6B,SAAHjO,GAAsD,IAAhDmC,EAAOnC,EAAPmC,QAASyK,EAAS5M,EAAT4M,UAAWY,EAAGxN,EAAHwN,IAAKpL,EAAepC,EAAfoC,gBACtEkH,EAA4BC,aAC1B5I,eAAC4M,GAAkB,CAACpL,QAASA,EAASyK,UAAWA,EAAWY,IAAKA,EAAKpL,gBAAiBA,KADlF8L,EAENrH,aAAAyC,EAAA,GAFuB,GASxB,OACE3I,eAACgJ,KAAU,CAACrJ,QANY,SAAC6N,GACzBA,EAAMC,kBACNF,GACF,EAG0CnK,QAAQ,OAAOoC,MAAM,KAAKkI,GAAG,MAAK3N,SACxEC,eAAC2N,KAAa,CAAC9K,MAAM,UAG3B,ECLM+K,GAAeC,aAAS1O,MAAAC,aAAA,4JAYxB0O,GAAmB7O,KAAOC,IAAG+B,MAAA7B,aAAA,wmBAgBpBwO,IAWTG,GAAQ9O,KAAOC,IAAGkF,MAAAhF,aAAA,0TAER,SAAC4O,GAAK,OAAKA,EAAM1O,MAAM2O,KAAKC,UAAU,IAWhDC,GAAUlP,KAAOC,IAAGkP,MAAAhP,aAAA,0FACJ,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO8O,WAAW,IAMvDC,GAAmBrP,KAAOC,IAAGqP,MAAAnP,aAAA,+CACvB,SAAC4O,GAAK,OAAMA,EAAMpO,SAAW,OAAS,KAAK,IAsGxC4O,GAxF2B,SAAH9O,GAAmE,IAA7DkK,EAAIlK,EAAJkK,KAAMtI,EAAO5B,EAAP4B,QAAS2K,EAASvM,EAATuM,UAAWwC,EAAQ/O,EAAR+O,SAAUC,EAAQhP,EAARgP,SAAUrF,EAAO3J,EAAP2J,QACnF3H,EAAkBC,eAExBoE,EAA0DC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAAlE4I,EAAqB1I,EAAA,GAAE2I,EAAwB3I,EAAA,GAEhD5D,EAAkBwM,KAAeC,SAASlF,EAAKrH,aAG/CD,EAAYsH,EAAKK,SAAShH,MAAM,KAAK,GAAG8L,oBAExCC,EAAwBtI,oBAAQ,WACpC,OAAKkD,EAAKqF,oBAGNrF,EAAKsF,mBAAqBC,KAAWC,IAChCX,EAAS3B,MAAMlD,EAAKqF,qBAEzBrF,EAAKsF,mBAAqBC,KAAWE,KAChCpD,EAAUa,MAAMlD,EAAKqF,qBAE1BrF,EAAKsF,mBAAqBC,KAAWG,IAChCZ,EAAS5B,MAAMlD,EAAKqF,qBAEtBrF,EAAKqF,oBAXH,IAYX,GAAG,CAACR,EAAUxC,EAAWyC,EAAU9E,EAAKqF,oBAAqBrF,EAAKsF,mBAE5D3N,EAAqByN,EAAU,IAAAlO,OAC7ByO,OAAOP,GAAY3J,oBAAemK,EAAW,CAAEC,sBAAuB,KAC1E,IAEEjO,EAAUoI,EAAKK,UAAYL,EAAKK,SAASQ,cAAciF,QAAQ,UAAW,IAC1EC,EAAY/F,EAAKgG,KAAOhG,EAAKgG,KAAKD,UAAY,OAE9CE,EACJjG,EAAKiD,KAAOjD,EAAKiD,IAAIC,MAAM,IAAIC,KAAU,MAAMC,WAAW3H,eAAe,QAAS,CAAEoK,sBAAuB,IAErGjP,EAAuCoJ,EAAvCpJ,mBAAoBC,EAAmBmJ,EAAnBnJ,eACtBqP,EAAwBvP,GAAyB,CAAEC,qBAAoBC,mBACvEgB,EAAe,GAAAX,OAAMiP,KAAsB,KAAAjP,OAAIgP,GAErD,OACEjQ,gBAACkO,GAAK,CAAAhO,SAAA,CACkB,SAArB6J,EAAKrH,aAA0BvC,eAAC8N,GAAgB,IACjD9N,eAACmC,GAAW,CACVX,QAASA,EACTY,WAAYwH,EAAKxH,WACjBC,gBAAiBA,EACjBC,UAAWA,EACXC,YAAaqH,EAAKrH,eAElBjB,GACAzB,gBAAC+B,KAAI,CAACC,eAAe,gBAAgBW,WAAW,SAAQzC,SAAA,CACtDF,gBAACI,KAAI,CAAAF,SAAA,CAAE2B,EAAgB,IAAK,OAAO,OACnC1B,eAACC,KAAI,CAACE,MAAI,EAAC8E,MAAO,CAAE+K,QAAS,OAAQxN,WAAY,UAAWzC,SACzD6J,EAAKiD,IACJhN,gBAAAoQ,YAAA,CAAAlQ,SAAA,CACEC,eAACsN,GAAS,CAAC9L,QAASA,EAASC,gBAAiBA,EAAiBwK,UAAWA,EAAWY,IAAKjD,EAAKiD,MAC9FgD,EAAQ,OAGX7P,eAACkQ,KAAQ,CAACpN,OAAQ,GAAID,MAAO,UAKrChD,gBAAC+B,KAAI,CAACC,eAAe,gBAAe9B,SAAA,CAClCF,gBAACI,KAAI,CAAAF,SAAA,CAAE2B,EAAgB,IAAK,QAAQ,OACpC1B,eAACC,KAAI,CAACE,MAAI,EAAAJ,SAAE4P,OAEd3P,eAACmQ,GAAoB,CAACvG,KAAMA,EAAMP,QAASA,EAAS5H,gBAAiBA,IACrEzB,eAACmO,GAAO,IACRnO,eAACP,KAAuB,CACtBE,QAAS,kBAAMiP,GAA0BD,EAAsB,EAC/D/O,SAAU+O,IAEZ3O,eAACsO,GAAgB,CAAC1O,SAAU+O,EAAsB5O,SAChDC,eAACmB,GAAc,CACbG,QAASA,EACTD,eAAc,+BAAAP,OAAiC8I,EAAKM,YAAYvJ,SAChEY,mBAAoBA,EACpBC,QAASA,EACTC,gBAAiBA,QAK3B,ECjKM2O,GAAYnR,KAAOC,IAAGC,MAAAC,aAAA,0LAGjB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO2B,IAAI,IAQ3B,SAAAxB,GAAQ,OAAAA,EAALJ,MAAkBC,OAAO8Q,UAAU,IAMhDC,GAAarR,KAAOC,IAAG+B,MAAA7B,aAAA,mDAiCdmR,GA5BiB,SAAHnP,GAQtB,IAPLuD,EAAKvD,EAALuD,MACAnD,EAAOJ,EAAPI,QACAhB,EAAkBY,EAAlBZ,mBACAC,EAAcW,EAAdX,eACAwL,EAAS7K,EAAT6K,UACAuE,EAAapP,EAAboP,cAAaC,EAAArP,EACbsP,kBAAU,IAAAD,GAAQA,EAEZ/O,EAAkBC,eAClBmO,EAAwBvP,GAAyB,CAAEC,qBAAoBC,mBACvEgB,EAAe,GAAAX,OAAMiP,KAAsB,KAAAjP,OAAIgP,GACrD,OACE9P,eAACoQ,GAAS,CAAArQ,SACPyQ,EACC3Q,gBAAAoQ,YAAA,CAAAlQ,SAAA,CACEF,gBAACyQ,GAAU,CAAAvQ,SAAA,CAAE4E,EAAM,QACjB+L,GACA1Q,eAACsN,GAAS,CAAC9L,QAASA,EAASyK,UAAWA,EAAWY,IAAK2D,EAAe/O,gBAAiBA,OAI5FzB,eAACsQ,GAAU,CAAAvQ,SAAE2B,EAAgB,IAAK,iBAI1C,ECxDMiP,GAAY1R,aAAOyD,KAAPzD,CAAaE,MAAAC,aAAA,gGAI3B,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAaG,EAAE,IAMlCkM,GAAYnR,KAAOC,IAAG+B,MAAA7B,aAAA,oHAKxB,SAAAM,GAAQ,OAAAA,EAALJ,MAAkByE,aAAaG,EAAE,IAiCzB0M,GA5BkC,SAAHxP,GAA+B,IAAzByP,EAAKzP,EAALyP,MAAOC,EAAK1P,EAAL0P,MAAO1I,EAAGhH,EAAHgH,IACxDF,EAAkBkC,aAAYhC,GAA9BF,cACFxG,EAAkBC,eAClB8G,EAAmBC,aAAiBR,GAc1C,OACErI,gBAACuQ,GAAS,CAAArQ,SAAA,CACRC,eAAC2Q,GAAS,CAAChO,IAAG,iBAAA7B,OAAmB+P,EAAK,QAAQjO,IAAI,OAAOC,MAAO,GAAIC,OAAQ,GAAI2C,GAAG,QACnF5F,gBAAA,OAAAE,SAAA,CAdE0I,EAEAzI,eAACC,KAAI,CAACC,MAAM,YAAYkF,SAAS,OAAOjF,MAAI,EAAAJ,SACzC2B,EAAgB,IAAK,aAKrB,KAQH1B,eAACC,KAAI,CAACE,MAAI,EAAAJ,SAAE+Q,SAIpB,EClDMC,GAAS9R,KAAO+R,KAAI7R,MAAAC,aAAA,mEACf,SAAAC,GAAA,IAAG4R,EAAM5R,EAAN4R,OAAQ3R,EAAKD,EAALC,MAAK,OAAQ2R,EAAS3R,EAAMC,OAAO2B,KAAO5B,EAAMC,OAAO2R,YAAY,IAY1EC,GAPsC,SAAHzR,GAAsB,IAAhB0J,EAAQ1J,EAAR0J,SAC9CC,EAAYC,eAAZD,QACFvE,EAA8B,OAAbsE,GAAqBC,EAAUD,EAAS/D,iBAAmB,IAElF,OAAOrF,eAAC+Q,GAAM,CAACE,OAAQ7H,EAASrJ,SAAE+E,GACpC,ECZMsL,GAAYnR,KAAOC,IAAGC,MAAAC,aAAA,yJAKjB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,OAAO,IAE1C,SAAAE,GAAQ,OAAAA,EAALJ,MAAkByE,aAAaG,EAAE,IAKlCkN,GAAYnS,aAAOoB,KAAPpB,CAAuBgC,MAAA7B,aAAA,8CAC1B,SAAAgC,GAAU,OAAAA,EAAPiQ,QAAyB,iBAAmB,WAAW,IAgB1DC,GAZyB,SAAHxN,GAAgC,IAA1ByN,EAAkBzN,EAAlByN,mBAEnCC,GADWC,eAATC,KAGR,OACE7R,gBAACuQ,GAAS,CAAArQ,SAAA,EACNyR,GAAY,UACdxR,eAACoR,GAAS,CAAClR,MAAM,UAAUmR,QAASE,MAG1C,EC5BMI,GAAiB1S,KAAOC,IAAGC,MAAAC,aAAA,imBACjB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBsS,QAAQ1D,UAAU,IAG5C,SAAAxO,GAAQ,OAAAA,EAALJ,MAAkBsS,QAAQ1Q,IAAI,IAK/B,SAAAE,GAAQ,OAAAA,EAAL9B,MAAkBuS,SAASC,KAAK,IAcnB,SAAAhO,GAAQ,OAAAA,EAALxE,MAAkBsS,QAAQ1D,UAAU,IAQ9DkC,GAAYnR,KAAOC,IAAG+B,MAAA7B,aAAA,iGAGhBuS,GAAkCA,IAc/BI,GATwC,SAAH9N,GAA+B,IAAzB+N,EAAO/N,EAAP+N,QAASjS,EAAQkE,EAARlE,SACjE,OACEF,gBAACuQ,GAAS,CAAArQ,SAAA,CACPA,EACDC,eAAC2R,GAAc,CAAA5R,SAAEiS,MAGvB,EC1CMC,GAAoBhT,KAAOC,IAAGC,MAAAC,aAAA,sGACzB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO2B,IAAI,IAIvC,SAAAxB,GAAQ,OAAAA,EAALJ,MAAkByE,aAAaG,EAAE,IAKlCkM,GAAYnR,KAAOC,IAAG+B,MAAA7B,aAAA,qJAQxB,SAAAgC,GAAQ,OAAAA,EAAL9B,MAAkByE,aAAaG,EAAE,IAiCzBgO,GA1B8C,SAAHpO,GAAwB,IAAlB1B,EAAU0B,EAAV1B,WACxD+P,EAAmB/P,EAAaA,EAAWgQ,cAAgB,IAC3D1Q,EAAkBC,eAExB,OACE9B,gBAACuQ,GAAS,CAAArQ,SAAA,CACRC,eAACiS,GAAiB,CAAAlS,SAAEoS,IACpBnS,eAAC+R,GAAO,CACNC,QACEnS,gBAAA,OAAAE,SAAA,CACG2B,EAAgB,IAAK,yEACtB1B,eAAA,SACAA,eAAA,SACC0B,EACC,IACA,gHAGL3B,SAEDC,eAACqS,KAAQ,CAACnS,MAAM,mBAIxB,ECjDMoS,GAAmBrT,KAAOC,IAAGC,MAAAC,aAAA,iHAK/B,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAaG,EAAE,IAKlCkM,GAAYnR,KAAOC,IAAG+B,MAAA7B,aAAA,qJAQxB,SAAAM,GAAQ,OAAAA,EAALJ,MAAkByE,aAAaG,EAAE,IAyBzBqO,GAlB4C,SAAHnR,GAAuB,IAAjBoR,EAASpR,EAAToR,UACtDC,EAAmBD,EAAS,IAAA1R,OAC1ByO,OAAOiD,GAAWnN,oBAAemK,EAAW,CAAEC,sBAAuB,KACzE,IACE/N,EAAkBC,eAExB,OACE9B,gBAACuQ,GAAS,CAAArQ,SAAA,CACRC,eAACsS,GAAgB,CAAAvS,SACfC,eAACC,KAAI,CAAAF,SAAE0S,MAETzS,eAAC+R,GAAO,CAACC,QAAStQ,EAAgB,IAAK,mEAA8D3B,SACnGC,eAACqS,KAAQ,CAACnS,MAAM,mBAIxB,E,UClDawS,GAAkBzT,KAAOC,IAAGC,MAAAC,aAAA,sWAEnB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO+D,KAAK,IAMnD,SAAA5D,GAAQ,OAAAA,EAALJ,MAAkByE,aAAaG,EAAE,IAOpC,SAAA9C,GAAQ,OAAAA,EAAL9B,MAAkByE,aAAa4O,EAAE,IAQ3BC,GAAe3T,KAAOC,IAAG+B,MAAA7B,aAAA,0EAMzByT,GAAQ5T,KAAO+R,KAAI5M,MAAAhF,aAAA,yBACrB,SAAA0E,GAAQ,OAAAA,EAALxE,MAAkBC,OAAOuT,SAAS,IAGnCC,GAAS9T,KAAO+R,KAAI5C,MAAAhP,aAAA,yBACtB,SAAA6E,GAAQ,OAAAA,EAAL3E,MAAkBC,OAAO8Q,UAAU,IAGpC2C,GAAgB/T,KAAOC,IAAGqP,MAAAnP,aAAA,uFAK1B+R,GAASlS,KAAOC,IAAG+T,MAAA7T,aAAA,kEAGrB,SAAAkF,GAAQ,OAAAA,EAALhF,MAAkBC,OAAO2B,IAAI,IAG9BgS,GAASjU,KAAOC,IAAGiU,MAAA/T,aAAA,6CAErB,SAAAgU,GAAQ,OAAAA,EAAL9T,MAAkBC,OAAO8Q,UAAU,ICmBlClH,GA1DqD,SAAH9J,GAA2B,IAArB+I,EAAG/I,EAAH+I,IAAKiL,EAAQhU,EAARgU,SAClEhK,EAAYC,eAAZD,QACFiK,EAAoBD,GAAYhK,EAAU,IAAI0D,KAAUsG,EAASjK,UAAY,KAC7E6C,EAAYsH,eACdnK,EAAW,KACXoK,EAAe,EACf1O,EAAiB,IAEjBwO,IACFlK,EAAWV,aAAiB4K,GAC5BE,EAAe,IAAIzG,KAAU3D,GAAUqK,aAAaxH,GAAWe,WAC/DlI,EAAiBsE,EAAS/D,kBAG5B,IAAAU,EAAkCC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAA1CQ,EAASN,EAAA,GAAEO,EAAYP,EAAA,GACtBsD,EAAaC,aAAWpB,GAAxBmB,SACF7H,EAAkBC,eAExB+R,EAA4BC,sBAAW,CACrCC,MAAO,EACPC,IAAKL,EACLM,SAAU,EACVC,UAAW,IACXC,SAAU,IALJC,EAAOP,EAAPO,QAASC,EAAMR,EAANQ,OAOXC,EAAcC,kBAAOF,GAM3B,OAJAG,sBAAU,WACRF,EAAYG,QAAQd,EACtB,GAAG,CAACA,EAAcW,IAGhBtU,gBAAC6S,GAAe,CAAA3S,SAAA,CACdF,gBAAC+S,GAAY,CAAA7S,SAAA,CACXC,eAAC6S,GAAK,CAAA9S,SAAC,SACPC,eAAC+S,GAAM,CAAAhT,SAAC,cAEVF,gBAACmT,GAAa,CAAAjT,SAAA,CACZF,gBAAA,OAAAE,SAAA,CACEC,eAACmR,GAAM,CAAApR,SAAE+E,IACTjF,gBAACqT,GAAM,CAAAnT,SAAA,CAAC,IAAEkU,EAAQ,YAEpBjU,eAACuF,KAAM,CACL6B,UAAWgC,GAAY7C,IAAc8C,EACrC1J,QAAO0H,aAAAC,eAAAC,MAAE,SAAAC,IAAA,OAAAF,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBpB,GAAa,GAAKkB,EAAAE,KAAA,EACZ2B,IAAU,OAChB/C,GAAa,GAAM,wBAAAkB,EAAAG,OAAA,GAAAL,EAAA,KAErBkG,GAAG,MAAK3N,SAEP2B,EAAgB,IAAK,kBAKhC,EChDMsG,GAAoB/I,KAAOC,IAAGC,MAAAC,aAAA,4BAiHrB8T,GA7G8C,SAAH7T,GAMnD,IALL+I,EAAG/I,EAAH+I,IACA6B,EAAQ5K,EAAR4K,SACAC,EAAW7K,EAAX6K,YACA1J,EAAkBnB,EAAlBmB,mBACAC,EAAcpB,EAAdoB,eAEMiB,EAAkBC,eAChB0H,EAAYC,eAAZD,QACRtD,EAAkDC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAA1D8D,EAAiB5D,EAAA,GAAE6D,EAAoB7D,EAAA,GAC9CkE,EAAmDC,aAAYhC,GAAvDiC,EAASF,EAATE,UAAWlC,EAAYgC,EAAZhC,aAAcD,EAAaiC,EAAbjC,cACzBG,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UACFqC,EAAOC,eAEPH,EAAarB,GAAWgB,GAAaA,EAAUM,cAAc,GAE7DL,EAAYJ,EAAYvJ,QACxBmP,EAAwBvP,GAAyB,CAAEC,qBAAoBC,mBACvEgB,EAAe,GAAAX,OAAMiP,KAAsB,KAAAjP,OAAIgP,GAC/CrH,EAAmBC,aAAiBR,GACpCpD,EAAiB2D,EAAiBpD,iBAExCsD,EAA2BC,aACzB5I,eAAC0F,GAAY,CAACnB,IAAK4D,EAAcxC,UAAW0C,EAASvC,UAAWmE,EAAUxI,gBAAiBA,KADtFoH,EAEN3C,aAAAyC,EAAA,GAFsB,GAGvBG,EAA4BF,aAAS5I,eAAC+H,GAAa,CAACxD,IAAK2D,EAAevC,UAAW4C,EAAWzC,UAAWmE,KAAlGlB,EAA+G7C,aAAA4C,EAAA,GAA9F,GAElBgC,EAAaC,aAAiBT,EAAWM,GAEvCI,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBrE,uBAAWQ,aAAAC,eAAAC,MAAC,SAAAC,IAAA,OAAAF,eAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,OAFIF,EAAAC,KAAA,EAE9BmC,GAAqB,GAAKpC,EAAAE,KAAA,EACpBoD,IAAW,OACjBlB,GAAqB,GAAMpC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyD,GAAAzD,EAAA,SAE3B0D,QAAQC,MAAK3D,EAAAyD,IAAG,yBAAAzD,EAAAG,OAAA,GAAAL,EAAA,kBAEjB,CAACwD,IAEJ,OAAK3B,EAaDqB,EACEjC,EAEA5I,gBAAC6S,GAAe,CAAA3S,SAAA,CACdF,gBAAC+S,GAAY,CAAA7S,SAAA,CACXF,gBAACgT,GAAK,CAAA9S,SAAA,CAAEkK,EAAS,OACjBjK,eAAC+S,GAAM,CAAAhT,SAAE2B,EAAgB,IAAK,eAEhC7B,gBAACmT,GAAa,CAAAjT,SAAA,CACZC,eAAA,OAAAD,SACEC,eAACmR,GAAM,CAAApR,SAAE+E,MAEXjF,gBAACmI,GAAiB,CAAAjI,SAAA,CAChBC,eAACgJ,KAAU,CAAC5F,QAAQ,YAAYzD,QAASoJ,EAAmBtD,GAAG,MAAK1F,SAClEC,eAACiJ,KAAS,CAAC/I,MAAM,UAAU2C,MAAM,WAEnC7C,eAACgJ,KAAU,CAAC5F,QAAQ,YAAYzD,QAASkJ,EAAiB9I,SACxDC,eAACkJ,KAAO,CAAChJ,MAAM,UAAU2C,MAAM,oBASzChD,gBAAC6S,GAAe,CAAA3S,SAAA,CACdF,gBAAC+S,GAAY,CAAA7S,SAAA,CACXF,gBAACkT,GAAM,CAAAhT,SAAA,CAAE2B,EAAgB,IAAK,SAAS,OACvC1B,eAAC6S,GAAK,CAAA9S,SAAEkK,OAEVjK,eAACgT,GAAa,CAAAjT,SACZC,eAACuF,KAAM,CAAC1C,MAAM,OAAOlD,QAASkJ,EAAkBzF,QAAQ,YAAWrD,SAChE2B,EAAgB,IAAK,mBAQ9B7B,gBAAC6S,GAAe,CAAA3S,SAAA,CACdC,eAAC4S,GAAY,CAAA7S,SACXC,eAAC+S,GAAM,CAAAhT,SAAE2B,EAAgB,IAAK,mBAEhC1B,eAACgT,GAAa,CAAAjT,SACZC,eAACuF,KAAM,CAAC1C,MAAM,OAAOuE,SAAUyC,EAAmBlK,QAASuL,EAAe9H,QAAQ,YAAWrD,SAC1F2B,EAAgB,IAAK,iBA1D1B7B,gBAAC6S,GAAe,CAAA3S,SAAA,CACdC,eAAC4S,GAAY,CAAA7S,SACXC,eAAC+S,GAAM,CAAAhT,SAAE2B,EAAgB,IAAK,qBAEhC1B,eAACgT,GAAa,CAAAjT,SACZC,eAACyL,KAAY,CAAC5I,MAAM,aA0D9B,EC9GMuN,GAAYnR,KAAOC,IAAGC,MAAAC,aAAA,wLACZ,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO2O,UAAU,IAMlD,SAAAxO,GAAQ,OAAAA,EAALJ,MAAkByE,aAAawQ,EAAE,IAMlCxT,GAAqB9B,aAAO+B,KAAP/B,CAAoBgC,MAAA7B,aAAA,+BAIzCoV,GAAiBvV,KAAOC,IAAGkF,MAAAhF,aAAA,wJACtB,SAAAgC,GAAQ,OAAAA,EAAL9B,MAAkBC,OAAO2B,IAAI,IAKvC,SAAA4C,GAAQ,OAAAA,EAALxE,MAAkByE,aAAaG,EAAE,IAKlCuQ,GAAgBxV,KAAOC,IAAGkP,MAAAhP,aAAA,gQAK5B,SAAA6E,GAAQ,OAAAA,EAAL3E,MAAkByE,aAAaG,EAAE,IAgBlCwO,GAAkBzT,KAAOC,IAAGqP,MAAAnP,aAAA,kKAI9B,SAAAkF,GAAQ,OAAAA,EAALhF,MAAkByE,aAAaG,EAAE,IAQlCwQ,GAAgBzV,KAAOC,IAAG+T,MAAA7T,aAAA,+BAI1BuV,GAAiB1V,KAAOC,IAAGiU,MAAA/T,aAAA,iEAG7B,SAAAgU,GAAQ,OAAAA,EAAL9T,MAAkByE,aAAawQ,EAAE,IAKlCK,GAAe3V,KAAOC,IAAG2V,MAAAzV,aAAA,2GAwDhB0V,GAjDgD,SAAHC,GAAiD,IAA3CC,EAAOD,EAAPC,QAASC,EAAGF,EAAHE,IAAK7S,EAAU2S,EAAV3S,WAAYoQ,EAASuC,EAATvC,UACpF5I,EAAOoL,EAEPtT,EAAkBC,eAChBnB,EAA0DoJ,EAA1DpJ,mBAAoBC,EAAsCmJ,EAAtCnJ,eAAgB8B,EAAsBqH,EAAtBrH,YAAaqN,EAAShG,EAATgG,KACnDpO,EAAUoI,EAAKK,UAAYL,EAAKK,SAASQ,cAAciF,QAAQ,UAAW,IAC1EI,EAAwBvP,GAAyB,CAAEC,qBAAoBC,mBACvE6J,EAAYV,EAAKM,YAAYvJ,QAC7BuU,EAAG,+BAAApU,OAAkCwJ,GACrC6K,EAAI,iCAAArU,OAAoCwJ,GACxCjI,EAAkBwM,KAAeC,SAASvM,GAEhD,OACE1C,gBAACuQ,GAAS,CAAArQ,SAAA,CACRF,gBAAC6U,GAAa,CAAA3U,SAAA,CACZC,eAACwU,GAAc,CAAAzU,SACbC,eAACe,GAAkB,CAACe,KAAI,sCAAAhB,OAAwCgP,GAAwB/P,SACrF2B,EAAgB,IAAI,OAADZ,OAASU,GAAW,CAAE4T,KAAM5T,QAGpDxB,eAACe,GAAkB,CAACe,KAAMoT,EAAInV,SAAE2B,EAAgB,IAAK,mBACrD1B,eAACe,GAAkB,CAACe,KAAMqT,EAAKpV,SAAE2B,EAAgB,IAAK,mBACtD7B,gBAAC4U,GAAa,CAAA1U,SAAA,CACXsC,EAAkBrC,eAACkD,KAAY,IAAMlD,eAACmD,KAAO,IAC7CyM,EAAO5P,eAACqV,KAAO,IAAM,WAG1BxV,gBAAC8U,GAAc,CAAA5U,SAAA,CACbF,gBAAC+U,GAAY,CAAA7U,SAAA,CACXC,eAACC,KAAI,CAAAF,SAAE2B,EAAgB,IAAK,SAC5B1B,eAACuQ,GAAG+E,aAAA,GAAKL,OAEXpV,gBAAC+U,GAAY,CAAA7U,SAAA,CACXC,eAACC,KAAI,CAAAF,SAAE2B,EAAgB,IAAK,gBAC5B1B,eAACkS,GAAUoD,aAAA,GAAKlT,OAElBvC,gBAAC+U,GAAY,CAAA7U,SAAA,CACXC,eAACC,KAAI,CAAAF,SAAE2B,EAAgB,IAAK,eAC5B1B,eAACuS,GAAS+C,aAAA,GAAK9C,UAGnB3S,gBAAC6S,GAAe,CAAA3S,SAAA,CACdC,eAACmJ,GAAamM,aAAA,GAAK1L,IACnB5J,eAACuV,GAAYD,aAAA,GAAK1L,SAI1B,EClJM4L,GAAQvW,KAAOC,IAAGC,MAAAC,aAAA,kEAEb,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAO8Q,UAAU,IAI3CoF,GAAmBxW,KAAOC,IAAG+B,MAAA7B,aAAA,yEAmBpBsW,GAT+B,SAAHhW,GAAkC,IAADiW,EAAAjW,EAA3BoR,aAAK,IAAA6E,EAAG,GAAEA,EAAE5V,EAAQL,EAARK,SAC3D,OACEF,gBAAA,OAAAE,SAAA,CACG+Q,GAAS9Q,eAACwV,GAAK,CAAAzV,SAAE+Q,IAClB9Q,eAACyV,GAAgB,CAAA1V,SAAEA,MAGzB,ECIa6V,GAAwC,CACnD,CACEC,GAAI,EACJT,KAAM,OACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,IAET,CACE+E,GAAI,EACJT,KAAM,SACNU,cAAe,KACfC,UAAU,EACVjF,MAAO,UAET,CACE+E,GAAI,EACJT,KAAM,MACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,OAET,CACE+E,GAAI,EACJT,KAAM,UACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,KAIEkF,GAAyC,CACpD,CACEH,GAAI,EACJT,KAAM,OACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,IAET,CACE+E,GAAI,EACJT,KAAM,SACNU,cAAe,KACfC,UAAU,EACVjF,MAAO,UAET,CACE+E,GAAI,EACJT,KAAM,MACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,OAET,CACE+E,GAAI,EACJT,KAAM,YACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,aAET,CACE+E,GAAI,EACJT,KAAM,aACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,cAET,CACE+E,GAAI,EACJT,KAAM,UACNU,cAAe,IACfC,UAAU,EACVjF,MAAO,KAICmF,GAAQ,SAARA,GAAQ,OAARA,EAAQ,cAARA,EAAQ,YAARA,CAAQ,MCjFdC,GAAQ,CACZjB,IAAK1E,GACL3G,KAAMgH,GACNK,OAAQE,GACR6D,QAAS1D,GACTlP,WAAY8P,GACZM,UAAWD,IAGP4D,GAAYlX,KAAOC,IAAGC,MAAAC,aAAA,2JAOxB,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAa4O,EAAE,IAKlCyD,GAAWnX,KAAOoX,GAAEpV,MAAA7B,aAAA,+DAEG,SAAAM,GAAQ,OAAAA,EAALJ,MAAkBC,OAAO8O,WAAW,IAG9DiI,GAAmBrX,KAAOsX,GAAEnS,MAAAhF,aAAA,wCAI5BoX,GAAgBvX,KAAOsX,GAAEnI,QAAAhP,aAAA,yDAKzBqX,GAAiBxX,KAAOsX,GAAEhI,QAAAnP,aAAA,gCAoHjBsX,GAhHgC,SAAC1I,GACeA,EAAtDiH,IAAsDjH,EAAjDpE,KAAiDoE,EAA3CiD,OAA2CjD,EAAnC5L,WAAmC4L,EAAvBwE,UAAtC,IAAiDwC,EAAYhH,EAAZgH,QACjDjP,EAAoDC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAA5DwL,EAAkBtL,EAAA,GAAE0Q,EAAqB1Q,EAAA,GAC1CvE,EAAkBC,eAElBiV,EAAoB,WACxBD,GAAuBpF,EACzB,EAEAsF,EAAuBpF,eAAfC,EAAImF,EAAJnF,KAAMoF,EAAID,EAAJC,KAERtF,GAAYE,EACZqF,EAAcvF,EAAWoE,GAAqBI,GAC9CgB,EAAcD,EAAYE,KAAI,SAACC,GAAM,OAAKA,EAAO9B,IAAI,IAqF3D,OACEvV,gBAAAoQ,YAAA,CAAAlQ,SAAA,CAnFK+W,EAiDHjX,gBAACuW,GAAQ,CAACzW,QAASiX,EAAkB7W,SAAA,CACnCF,gBAAA,MAAAE,SAAA,CACEC,eAAA,MAAAD,SACEC,eAACyW,GAAc,CAAA1W,SACbC,eAAC0V,GAAU,CAAA3V,SACTC,eAAC4Q,GAAI0E,aAAA,GAAKtH,EAAMpE,aAItB/J,gBAAA,MAAAE,SAAA,CACEC,eAACsW,GAAgB,CAAAvW,SACfC,eAAC0V,GAAU,CAAC5E,MAAOpP,EAAgB,KAAM,UAAU3B,SACjDC,eAACmR,GAAMmE,aAAA,GAAKtH,EAAMiD,aAGtBjR,eAACwW,GAAa,CAAAzW,SACZC,eAAC0V,GAAU,CAAC5E,MAAOpP,EAAgB,IAAK,OAAO3B,SAC7CC,eAACuQ,GAAG+E,0BAAA,GAAKtH,EAAMiH,KAAG,IAAEvE,YAAU,eAKtC1Q,eAAA,MAAAD,SACEC,eAACmW,GAAS,CAAApW,SACRC,eAAC0V,GAAU,CAAA3V,SACTC,eAACsR,GAAO,CAACC,mBAAoBA,aAxEnCvR,eAACoW,GAAQ,CAACzW,QAASiX,EAAkB7W,SAClCoX,OAAOC,KAAKpJ,GAAOiJ,KAAI,SAACI,GACvB,IAAMC,EAAcN,EAAYO,QAAQF,GACxC,IAAqB,IAAjBC,EACF,OAAO,KAGT,OAAQD,GACN,IAAK,UACH,OACErX,eAAA,MAAAD,SACEC,eAACmW,GAAS,CAAApW,SACRC,eAAC0V,GAAU,CAAA3V,SACTC,eAACsR,GAAO,CAACC,mBAAoBA,SAH1B8F,GAQb,IAAK,MACH,OACErX,eAAA,MAAAD,SACEC,eAACmW,GAAS,CAAApW,SACRC,eAAC0V,GAAU,CAAC5E,MAAOpP,EAAgB,IAAK,OAAO3B,SAC7CC,eAACuQ,GAAG+E,0BAAA,GAAKtH,EAAMiH,KAAG,IAAEvE,WAAYc,UAH7B6F,GAQb,QACE,OACErX,eAAA,MAAAD,SACEC,eAACmW,GAAS,CAAApW,SACRC,eAAC0V,GAAU,CACT5E,MAAOpP,EAAgBqV,EAAYO,GAAaxB,cAAeiB,EAAYO,GAAaxG,OAAO/Q,SAE9FyX,KAAMC,cAAcvB,GAAMmB,GAAMrJ,EAAMqJ,SALpCA,GAWjB,MA0CH9F,GAAsByD,GACrBhV,eAAA,MAAAD,SACEC,eAAA,MAAI0X,QAAS,EAAE3X,SACbC,eAAC8U,GAAWQ,aAAA,GAAKtH,UAM7B,ECjKMoC,GAAYnR,KAAOC,IAAGC,QAAAC,aAAA,2GAChB,SAAAC,GAAQ,OAAAA,EAALC,MAAkB2O,KAAK0J,UAAU,IAEhC,SAAAjY,GAAQ,OAAAA,EAALJ,MAAkB2O,KAAKC,UAAU,IAK9C0J,GAAe3Y,KAAOC,IAAG+B,QAAA7B,aAAA,qFAQzByY,GAAc5Y,KAAO6Y,MAAK1T,QAAAhF,aAAA,gJAS1B2Y,GAAY9Y,KAAO+Y,MAAK5J,QAAAhP,aAAA,iGASxB6Y,GAAiBhZ,KAAOC,IAAGqP,QAAAnP,aAAA,oCAK3B8Y,GAAwBjZ,KAAOC,IAAG+T,QAAA7T,aAAA,qGA2CzB+Y,GApC0B,SAACnK,GACxC,IAAMoK,EAAiBhE,kBAAuB,MACxC1S,EAAkBC,eAChB0W,EAAkBrK,EAAlBqK,KAAMC,EAAYtK,EAAZsK,QAENC,EAASC,aAASF,EAASD,EAAM,CAAEtC,UAAU,EAAM0C,WAAY,SAA/DF,KAQR,OACEvY,eAACoQ,GAAS,CAAArQ,SACRF,gBAACoY,GAAc,CAAAlY,SAAA,CACbC,eAAC4X,GAAY,CAACc,IAAKN,EAAerY,SAChCC,eAAC6X,GAAW,CAAA9X,SACVC,eAAC+X,GAAS,CAAAhY,SACPwY,EAAKtB,KAAI,SAAC0B,GACT,OAAOC,yBAAClC,GAAGpB,0BAAA,GAAKqD,EAAIE,UAAQ,IAAExB,IAAG,aAAAvW,OAAe6X,EAAI9C,MACtD,UAIN7V,eAACkY,GAAqB,CAAAnY,SACpBF,gBAAC0F,KAAM,CAACnC,QAAQ,OAAOzD,QAnBX,WAClByY,EAAe9D,QAAQwE,eAAe,CACpCC,SAAU,UAEd,EAeoDhZ,SAAA,CACzC2B,EAAgB,IAAK,UACtB1B,eAACI,KAAa,CAACF,MAAM,qBAMjC,E,SCrEe8Y,GAlBQ,WACrB,IAAAC,EAAyBC,eAAjBC,EAAGF,EAAHE,IAAKC,EAAOH,EAAPG,QACP1X,EAAkBC,eAExB,OACE3B,eAAChB,GAAO,CAAAe,SACNF,gBAACwZ,KAAU,CAACC,YAAaF,EAAU,EAAI,EAAG5T,MAAM,KAAKpC,QAAQ,SAAQrD,SAAA,CACnEC,eAACuZ,KAAc,CAACC,GAAIzX,KAAM0X,GAAE,GAAA3Y,OAAKqY,GAAMpZ,SACpC2B,EAAgB,KAAM,UAEzB1B,eAACuZ,KAAc,CAACC,GAAIzX,KAAM0X,GAAE,GAAA3Y,OAAKqY,EAAG,YAAWpZ,SAC5C2B,EAAgB,IAAK,kBAKhC,EAIM1C,GAAUC,KAAOC,IAAGC,QAAAC,aAAA,yLAUtB,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAaG,EAAE,IChClCN,GAAc3E,aAAO4E,KAAP5E,CAAaE,QAAAC,aAAA,wDAK3Bsa,GAAeza,KAAOC,IAAG+B,QAAA7B,aAAA,uFAE3B,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAaG,EAAE,IAMlCkM,GAAYnR,KAAOC,IAAGkF,QAAAhF,aAAA,QA0Bbua,GAnBsB,SAAHja,GAA6B,IAAvBiF,EAAKjF,EAALiF,MAAOF,EAAQ/E,EAAR+E,SAC7CsB,EAA8BC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAAtCsL,EAAOpL,EAAA,GAAE2T,EAAU3T,EAAA,GACpB4T,EAAUzF,kBAAO,MAEvB,OACEpU,eAACoQ,GAAS,CAACiB,QAASA,EAAQtR,SAC1BC,eAAC0Z,GAAY,CAAA3Z,SACXC,eAAC4D,GAAW,CACV8U,IAAKmB,EACLlV,MAAOA,EACPF,SAAUA,EACVa,YAAY,eACZwU,OAAQ,kBAAMF,GAAW,EAAM,OAKzC,EC/BMxJ,GAAYnR,KAAOC,IAAGC,QAAAC,aAAA,qEAGxB,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAaG,EAAE,IAwBzB6V,GAnB8C,SAAHra,GAAgC,IAA1Bsa,EAAQta,EAARsa,SAAUC,EAAQva,EAARua,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,EAEb,EAEA,OACEta,gBAACuQ,GAAS,CAAArQ,SAAA,CACRC,eAACgJ,KAAU,CAAC5F,QAAQ,OAAOoC,MAAM,KAAK7F,QAAS,kBAAMua,EAAajE,GAASmE,KAAK,EAACra,SAC/EC,eAACqa,KAAY,CAACna,MAAO8Z,IAAa/D,GAASmE,KAAO,UAAY,mBAEhEpa,eAACgJ,KAAU,CAAC5F,QAAQ,OAAOoC,MAAM,KAAK7F,QAAS,kBAAMua,EAAajE,GAASqE,MAAM,EAACva,SAChFC,eAACua,KAAY,CAACra,MAAO8Z,IAAa/D,GAASqE,MAAQ,UAAY,qBAIvE,EC/BME,GAAiBvb,KAAOC,IAAGC,QAAAC,aAAA,4QAOjB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBmE,QAAQE,KAAK,IAC5B,SAAAjE,GAAQ,OAAAA,EAALJ,MAAkBC,OAAOkb,cAAc,IAEhD,SAAArZ,GAAQ,OAAAA,EAAL9B,MAAkBC,OAAO+D,KAAK,IAI3CoX,GAAwBzb,KAAOC,IAAG+B,QAAA7B,aAAA,sRAKxB,SAAA0E,GAAQ,OAAAA,EAALxE,MAAkBC,OAAO+D,KAAK,IACpC,SAAAW,GAAQ,OAAAA,EAAL3E,MAAkBuS,SAAS8I,QAAQ,IAM/C,SAAArW,GAAQ,OAAAA,EAALhF,MAAkByE,aAAaG,EAAE,IAKlC0W,GAAoB3b,KAAOC,IAAGkF,QAAAhF,aAAA,oTAEzB,SAAAgU,GAAQ,OAAAA,EAALvQ,KAAiB,IAEf,SAAAkS,GAAQ,OAAAA,EAALzV,MAAkBC,OAAO+D,KAAK,IAK7C,SAAAuX,GAAQ,OAAAA,EAALvb,MAAkByE,aAAaG,EAAE,IAIpC,SAAC8J,GAAK,OACNA,EAAM8M,QACNC,aAAG3M,QAAAhP,aAAA,6WACCob,IAC2B,SAAAQ,GAAQ,OAAAA,EAAL1b,MAAkBC,OAAOkb,cAAc,IACvD,SAAAQ,GAAQ,OAAAA,EAAL3b,MAAkBsS,QAAQsJ,SAAS,GAIpDR,IAIoB,SAAAS,GAAQ,OAAAA,EAAL7b,MAAkBC,OAAOkb,cAAc,IAGhD,SAAAW,GAAQ,OAAAA,EAAL9b,MAAkBsS,QAAQsJ,SAAS,GAEvD,IAUCG,GAAepc,KAAOqc,GAAE/M,QAAAnP,aAAA,mFAIjB,SAAAmc,GAAQ,OAAAA,EAALjc,MAAkBuS,SAAS8I,QAAQ,IAG7Ca,GAAWvc,KAAOwc,GAAExI,QAAA7T,aAAA,6FAIR,SAAAsc,GAAQ,OAAAA,EAALpc,MAAkBC,OAAOkb,cAAc,IA8D7CkB,GAhDsC,SAAHC,GAA+B,IAAzBC,EAAOD,EAAPC,QAASpX,EAAQmX,EAARnX,SACzDqX,EAAe1H,kBAAO,MACtB2H,EAAc3H,kBAAO,MAC3BrO,EAA4BC,qBAAS,GAAMC,EAAAC,aAAAH,EAAA,GAApC+U,EAAM7U,EAAA,GAAE+V,EAAS/V,EAAA,GACxBI,EAA4CL,oBAAS6V,EAAQ,IAAGvV,EAAAJ,aAAAG,EAAA,GAAzD4V,EAAc3V,EAAA,GAAE4V,EAAiB5V,EAAA,GACxC6V,EAA0CnW,oBAAS,CAAEnD,MAAO,EAAGC,OAAQ,IAAIsZ,EAAAlW,aAAAiW,EAAA,GAApEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAW,WAAH,OAASP,GAAWlB,EAAO,EAEnC0B,EAAkB,SAACC,GAAmB,OAAK,WAC/CP,EAAkBO,GAClBT,GAAU,GAENvX,GACFA,EAASgY,EAEb,CAAC,EASD,OAPApI,sBAAU,WACRiI,EAAiB,CACfzZ,MAAOkZ,EAAYzH,QAAQoI,YAC3B5Z,OAAQiZ,EAAYzH,QAAQqI,cAEhC,GAAG,IAGD9c,gBAAC+a,GAAiBtF,0BAAA,CAACwF,OAAQA,EAAQpC,IAAKoD,GAAkBO,GAAa,IAAAtc,SAAA,CAC5C,IAAxBsc,EAAcxZ,OACb7C,eAACwa,GAAc,CAAC7a,QAAS4c,EAASxc,SAChCC,eAACC,KAAI,CAAAF,SAAEkc,EAAenL,UAG1B9Q,eAAC4c,KAAiB,CAAC1c,MAAM,OAAOP,QAAS4c,IACzCvc,eAAC0a,GAAqB,CAAA3a,SACpBC,eAACqb,GAAY,CAAC3C,IAAKqD,EAAYhc,SAC5B8b,EAAQ5E,KAAI,SAACwF,GAAM,OAClBA,EAAO3L,QAAUmL,EAAenL,MAC9B9Q,eAACwb,GAAQ,CAAC7b,QAAS6c,EAAgBC,GAAQ1c,SACzCC,eAACC,KAAI,CAAAF,SAAE0c,EAAO3L,SADiC2L,EAAO3L,OAGtD,IAAI,WAMpB,ECxHM+L,GAAmB5d,KAAOC,IAAGC,QAAAC,aAAA,oPAS/B,SAAAC,GAAQ,OAAAA,EAALC,MAAkByE,aAAaG,EAAE,IAOlC4Y,GAAgB7d,KAAOC,IAAG+B,QAAA7B,aAAA,gHAK5Ba,MAKE8c,GAAe9d,KAAOC,IAAGkF,QAAAhF,aAAA,+CACzBa,MAKA+c,GAAkB/d,KAAOC,IAAGkP,QAAAhP,aAAA,4IAM9B,SAAAM,GAAQ,OAAAA,EAALJ,MAAkByE,aAAaG,EAAE,IAMlC+Y,GAAehe,KAAOC,IAAGqP,QAAAnP,aAAA,iRAW3B,SAAAgC,GAAQ,OAAAA,EAAL9B,MAAkByE,aAAaG,EAAE,IAgBlCgZ,IANcje,aAAOyD,KAAPzD,CAAagU,QAAA7T,aAAA,4EAMlBH,KAAOC,IAAGiU,QAAA/T,aAAA,2KAEN,SAAA0E,GAAQ,OAAAA,EAALxE,MAAkBC,OAAO4d,UAAUC,SAAS,IAK9D,SAAAnZ,GAAQ,OAAAA,EAAL3E,MAAkByE,aAAaG,EAAE,KA8SzBmZ,GAxSS,WACtB,IAAQC,EAASpE,eAAToE,KACAC,EAAaC,eAAbD,SACF7b,EAAkBC,eAClB8b,EAAUC,eACVzR,EAAYsH,eACZ9E,EAAWkP,eACjB5X,EAA0BC,oBAAS,IAAGC,EAAAC,aAAAH,EAAA,GAA/B6X,EAAK3X,EAAA,GAAE4X,EAAQ5X,EAAA,GACtBI,EAAgCL,oBAASiQ,GAASmE,MAAK9T,EAAAJ,aAAAG,EAAA,GAAhD2T,EAAQ1T,EAAA,GAAEwX,EAAWxX,EAAA,GACtByX,EAAcC,eACZ3U,EAAYC,eAAZD,QACR8S,EAAoCnW,oBAAS,OAAMoW,EAAAlW,aAAAiW,EAAA,GAA5C8B,EAAU7B,EAAA,GAAE8B,EAAa9B,EAAA,GAE1B+B,EAAWC,eACTC,EAAgBC,eAAhBD,YACRhK,sBAAU,WACJhL,GACF8U,EAASI,aAAuBlV,GAEpC,GAAG,CAACA,EAAS8U,EAAUE,IAEvB,IAAAG,EAAsCxY,qBAAS,GAAMyY,EAAAvY,aAAAsY,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAcnB,EAAQoB,QAAO,SAACjV,GAAI,OAAkB,IAAbA,EAAKxB,KAAiC,OAApBwB,EAAKxH,UAAmB,IACjF0c,EAAgBrB,EAAQoB,QAAO,SAACjV,GAAI,OAAkB,IAAbA,EAAKxB,KAAiC,OAApBwB,EAAKxH,UAAmB,IAEnF2c,EAAmBH,EAAYC,QACnC,SAACjV,GAAI,OAAKA,EAAKyJ,UAAY,IAAItG,KAAUnD,EAAKyJ,SAASnL,eAAeyC,cAAc,EAAE,IAqBlFqU,EAAYnY,wBAChB,SAACoY,GAA2C,IAADC,EACnCC,EAAiB,IAAIpS,MAA4D,QAAlDmS,EAAAzB,EAAQ2B,MAAK,SAACxV,GAAI,OAAKA,EAAKxB,MAAQiX,IAAa,WAAC,IAAAH,OAAA,EAAlDA,EAAoDI,oBAAqB,GAC1GC,EAA+CN,EAAehI,KAAI,SAACrN,GACrE,IAAKA,EAAK4V,cAAgB5V,EAAKqF,oBAC7B,OAAOrF,EAET,IAAM6V,EAAqBC,KAAe5S,MAAMlD,EAAK+V,YAC/CC,EAAoBH,EAAmB3S,MAAM+S,MAG/ChT,EAAMsS,EAAerS,MAAM8S,GAAmB1gB,IAAI0K,EAAKqF,qBAE3D,GAAIrF,EAAKsF,mBAAqBC,KAAW2Q,MAAQlW,EAAKsF,mBAAqBC,KAAW4Q,IACpFlT,EAAMsS,EAAerS,MAAM8S,GAAmB1gB,IAAI0K,EAAKqF,qBAAqBnC,MAAM2B,QAC7E,GAAI7E,EAAKsF,mBAAqBC,KAAWG,IAC9CzC,EAAMZ,EAAU/M,IAAI6e,GAAajR,MAAM8S,GAAmB1gB,IAAI0K,EAAKqF,0BAC9D,GAAIrF,EAAKsF,mBAAqBC,KAAWE,KAC9CxC,EAAM+S,EAAkB1gB,IAAI0K,EAAKqF,0BAC5B,GAAIrF,EAAKgG,KAAM,CACpB,IAAMoQ,EACJpW,GAAQuV,EAAerS,MAAM2S,GAAoB3S,MAAM+S,MAAiB3gB,IAAI0K,EAAKqF,qBAC7EgR,EACJrW,EAAK0V,mBACL,IAAIvS,KAAUnD,EAAK0V,mBAChBxS,MAAMlD,EAAKgG,KAAKsQ,gBAChBpT,MAAM+S,MACN3gB,IAAI0K,EAAKqF,qBAEdpC,EAAMmT,GAAWC,GAAWD,EAAQG,KAAKF,EAC3C,CAEA,IAAIzN,EAAY5I,EAAKqF,oBAgBrB,OAdKrF,EAAKqF,sBACRuD,EAAY,MAEV5I,EAAKsF,mBAAqBC,KAAWC,MACvCoD,EAAY/D,EAAS3B,MAAMlD,EAAKqF,sBAE9BrF,EAAKsF,mBAAqBC,KAAWE,OACvCmD,EAAYvG,EAAUa,MAAMlD,EAAKqF,sBAG/BrF,EAAKsF,mBAAqBC,KAAWG,MACvCkD,EAAYuL,EAAYjR,MAAMlD,EAAKqF,sBAGrCqG,0BAAA,GAAY1L,GAAI,IAAEiD,MAAK2F,aACzB,IAEA,GAAIoL,EAAO,CACT,IAAMwC,EAAiBxC,EAAMxL,cAC7BmN,EAAwBA,EAAsBV,QAAO,SAACjV,GACpD,QAAIA,EAAKK,SAASmI,cAActD,SAASsR,EAK3C,GACF,CACA,OAAOb,CACT,GACA,CAAC9Q,EAAUgP,EAASG,EAAO3R,EAAW8R,IAOlCsC,GAAY9C,EAASzO,SAAS,WAChCwR,EAAc,GASZC,GAFND,EAhGkB,SAACE,GACjB,OAAQvC,GACN,IAAK,MACH,OAAOwC,mBAAQD,EAAO,MAAO,QAC/B,IAAK,aACH,OAAOC,mBAAQD,GAAO,SAAC5W,GAAyB,OAAK2F,OAAO3F,EAAKxH,WAAWse,MAAM,GAAI,GAAG,GAAE,QAC7F,IAAK,SACH,OAAOD,mBAAQD,GAAO,SAAC5W,GAAyB,OAAMA,EAAKyJ,SAAWzJ,EAAKyJ,SAASjK,SAAW,CAAC,GAAG,QACrG,IAAK,YACH,OAAOqX,mBAAQD,GAAO,SAAC5W,GAAyB,OAAK2F,OAAO3F,EAAK4I,UAAU,GAAE,QAC/E,QACE,OAAOgO,EAEb,CAmFcG,CALZL,EAA4BtB,EAD1BqB,EACY3B,EAAwBK,EAA8BH,EAE5CE,KAKE7H,KAAI,SAACrN,GAC/B,IAAQpJ,EAAyDoJ,EAAzDpJ,mBAAoB0O,EAAqCtF,EAArCsF,iBAAkBzO,EAAmBmJ,EAAnBnJ,eACxCe,EAAUoI,EAAKK,UAAYL,EAAKK,SAAShH,MAAM,KAAK,GAAGwH,cAAciF,QAAQ,UAAW,IAiC9F,MA/BsB,CACpBuF,IAAK,CACHtQ,MACEiF,EAAKiD,KACLjD,EAAKiD,IAAIC,MAAM,IAAIC,KAAU,MAAMC,WAAW3H,eAAe,QAAS,CAAEoK,sBAAuB,IACjGrN,WAAYwH,EAAKxH,WACjBZ,UACAhB,qBACA0O,mBACAzO,iBACAwL,YACAuE,cAAe5G,EAAKiD,KAEtBjD,KAAM,CACJiH,MAAOjH,EAAKK,SAAShH,MAAM,KAAK,GAAG8L,oBACnC+B,MAAOtP,EACP4G,IAAKwB,EAAKxB,KAEZ6I,OAAQ,CACN7H,SAAUQ,EAAKyJ,SAAW3K,aAAiB,IAAIqE,KAAUnD,EAAKyJ,SAASjK,WAAa,MAGtFoJ,UAAW,CACTA,UAAW5I,EAAK4I,WAElBpQ,WAAY,CACVA,WAAYwH,EAAKxH,YAEnB4S,QAASpL,EAIb,IAsEA,OACE/J,gBAAAoQ,YAAA,CAAAlQ,SAAA,CACEF,gBAACqd,GAAM,CAAAnd,SAAA,CACLC,eAACgD,KAAO,CAACwW,GAAG,KAAKoH,KAAK,MAAM1gB,MAAM,YAAYuC,GAAG,OAAM1C,SACpD2B,EAAgB,IAAK,WAExB1B,eAACgD,KAAO,CAAC4d,KAAK,KAAK1gB,MAAM,OAAMH,SAC5B2B,EAAgB,IAAK,kDAG1B7B,gBAACghB,KAAI,CAAA9gB,SAAA,CACHF,gBAACgd,GAAgB,CAAA9c,SAAA,CACfF,gBAACod,GAAY,CAAAld,SAAA,CACXC,eAAC+Z,GAAU,CAACC,SAAUA,EAAUC,SAAU,SAACE,GAAc,OAAK2D,EAAY3D,EAAK,IAC/Eta,gBAACid,GAAa,CAAA/c,SAAA,CACZC,eAAC8gB,KAAM,CAACC,QAASrC,EAAaja,SAAU,kBAAMka,GAAgBD,EAAY,EAAElZ,MAAM,OAClF3F,gBAACI,KAAI,CAAAF,SAAA,CAAC,IAAE2B,EAAgB,KAAM,qBAEhC1B,eAACgZ,GAAc,OAEjBnZ,gBAACmd,GAAe,CAAAjd,SAAA,CACdF,gBAACkd,GAAY,CAAAhd,SAAA,CACXC,eAACC,KAAI,CAAAF,SAAC,YACNC,eAAC2b,GAAM,CACLE,QAAS,CACP,CACE/K,MAAO,MACPnM,MAAO,OAET,CACEmM,MAAO,MACPnM,MAAO,OAET,CACEmM,MAAO,aACPnM,MAAO,cAET,CACEmM,MAAO,SACPnM,MAAO,UAET,CACEmM,MAAO,YACPnM,MAAO,cAGXF,SAlDiB,SAACgY,GAC9ByB,EAAczB,EAAO9X,MACvB,OAmDU9E,gBAACkd,GAAY,CAAC9X,MAAO,CAAE+b,WAAY,IAAKjhB,SAAA,CACtCC,eAACC,KAAI,CAAAF,SAAC,WACNC,eAAC2Z,GAAW,CAAClV,SA3KC,SAAC+I,GACzBqQ,EAASrQ,EAAMyT,OAAOtc,MACxB,EAyKsDA,MAAOiZ,aAvHvC,WACpB,GAAI5D,IAAa/D,GAASqE,OAASiG,EAAQW,OAAQ,CACjD,IAEM5I,EAFetC,GAEQiB,KAAI,SAACC,GAAM,MAAM,CAC5CrB,GAAIqB,EAAOrB,GACXT,KAAM8B,EAAO9B,KACbtE,MAAOoG,EAAOpG,MACdqQ,KAAM,SAACC,EAAsBC,GAC3B,OAAQnK,EAAO9B,MACb,IAAK,OACH,OAAOiM,EAAExL,GAAKuL,EAAEvL,GAClB,IAAK,MACH,OAAIuL,EAAEvI,SAAS5D,IAAItQ,OAAS0c,EAAExI,SAAS5D,IAAItQ,MAClC4K,OAAO6R,EAAEvI,SAAS5D,IAAItQ,OAAS4K,OAAO8R,EAAExI,SAAS5D,IAAItQ,OAGvD,EACT,IAAK,SACH,OAAOyc,EAAEvI,SAAS5H,OAAO7H,SAAWiY,EAAExI,SAAS5H,OAAO7H,SACxD,QACE,OAAO,EAEb,EACA2M,SAAUmB,EAAOnB,SAClB,IAED,OAAO/V,eAACshB,GAAK,CAACjJ,KAAMkI,EAASjI,QAASA,GACxC,CAEA,OACEtY,eAAA,OAAAD,SACEF,gBAAC0hB,KAAU,CAAAxhB,SAAA,CACTC,eAACwhB,KAAK,CAACC,OAAK,EAACnE,KAAI,GAAAxc,OAAKwc,GAAOvd,SAC1BugB,EAAYrJ,KAAI,SAACrN,GAAI,OACpB5J,eAACwO,GAAQ,CAEP5E,KAAMA,EACN6E,SAAUA,EACVxC,UAAWA,EACXyC,SAAUqP,EACV1U,QAASA,EACT/H,SAAS,GANJsI,EAAKxB,IAOV,MAGNpI,eAACwhB,KAAK,CAACC,OAAK,EAACnE,KAAI,GAAAxc,OAAKwc,EAAI,YAAWvd,SAClCugB,EAAYrJ,KAAI,SAACrN,GAAI,OACpB5J,eAACwO,GAAQ,CAEP5E,KAAMA,EACN6E,SAAUA,EACVxC,UAAWA,EACXyC,SAAUqP,EACV1U,QAASA,EACT/H,SAAO,GANFsI,EAAKxB,IAOV,UAMd,CA6DOsZ,QAKT,C","file":"static/js/6.b167875c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on BscScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">\r\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\r\n          </Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {TranslateString(452, 'Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          No tokens to stake:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {TranslateString(999, 'get')} {symbol}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={TranslateString(1070, 'Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {TranslateString(999, 'Get')} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={TranslateString(588, 'Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const web3 = useWeb3()\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(758, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          AQUA\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1072, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1074, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(860, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(858, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(864, 'CAKE per $1000')}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, 'Get')} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 32px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethPrice?: BigNumber\r\n  provider?: ProviderType\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n      return ethPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'AQUA'\r\n\r\n  const farmAPY =\r\n    farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  const { quoteTokenAdresses, tokenAddresses } = farm\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.tokenSymbol === 'AQUA' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{TranslateString(736, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport { Address, QuoteToken } from 'config/constants/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  lpLabel: string\r\n  quoteTokenAdresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  tokenAddresses: Address\r\n  cakePrice: BigNumber\r\n  originalValue: BigNumber\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  lpLabel,\r\n  quoteTokenAdresses,\r\n  tokenAddresses,\r\n  cakePrice,\r\n  originalValue,\r\n  hideButton = false,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  return (\r\n    <Container>\r\n      {originalValue ? (\r\n        <>\r\n          <AprWrapper>{value}%</AprWrapper>\r\n          {!hideButton && (\r\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={originalValue} addLiquidityUrl={addLiquidityUrl} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <AprWrapper>{TranslateString(656, 'Loading...')}</AprWrapper>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Text, Image } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  image: string\r\n}\r\n\r\nconst IconImage = styled(Image)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const TranslateString = useI18n()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\r\n          {TranslateString(999, 'FARMING')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  // pid: number\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\r\n  const { account } = useWeb3React()\r\n  const displayBalance = earnings !== null && account ? earnings.toLocaleString() : '?'\r\n\r\n  return <Amount earned={earnings}>{displayBalance}</Amount>\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap-libs/uikit'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && 'Details'}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface TooltipProps {\r\n  content: React.ReactNode\r\n}\r\n\r\nconst TooltipContent = styled.div`\r\n  background: ${({ theme }) => theme.tooltip.background};\r\n  padding: 16px;\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.tooltip.text};\r\n  width: max-content;\r\n  display: none;\r\n  padding: 16px;\r\n  max-height: 500px;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n  position: absolute;\r\n  bottom: calc(100% + 16px);\r\n  transform: translate(34px, 0);\r\n  right: 0;\r\n  max-width: 246px;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\r\n    bottom: 0;\r\n    position: absolute;\r\n    transform: translate(-34px, 9px);\r\n    right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n      <TooltipContent>{content}</TooltipContent>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    text-align: left;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultipler = multiplier ? multiplier.toLowerCase() : '-'\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultipler}</MultiplierWrapper>\r\n      <Tooltip\r\n        content={\r\n          <div>\r\n            {TranslateString(999, 'The multiplier represents the amount of token rewards each farm gets.')}\r\n            <br />\r\n            <br />\r\n            {TranslateString(\r\n              999,\r\n              'For example, if a 1x farm was getting 1 token per block, a 40x farm would be getting 40 tokens per block.',\r\n            )}\r\n          </div>\r\n        }\r\n      >\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: number\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    text-align: left;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity = liquidity\r\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport const Subtle = styled.span`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const Earned = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport const Staked = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { useCountUp } from 'react-countup'\r\n\r\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\r\n\r\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\r\n  const { account } = useWeb3React()\r\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\r\n  const cakePrice = usePriceCakeBusd()\r\n  let earnings = null\r\n  let earningsBusd = 0\r\n  let displayBalance = '?'\r\n\r\n  if (earningsBigNumber) {\r\n    earnings = getBalanceNumber(earningsBigNumber)\r\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\r\n    displayBalance = earnings.toLocaleString()\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const TranslateString = useI18n()\r\n\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: earningsBusd,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals: 3,\r\n  })\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(earningsBusd)\r\n  }, [earningsBusd, updateValue])\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Title>AQUA</Title>\r\n        <Subtle>EARNED</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Earned>{displayBalance}</Earned>\r\n          <Staked>~{countUp}USD</Staked>\r\n        </div>\r\n        <Button\r\n          disabled={!earnings || pendingTx || !account}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {TranslateString(999, 'Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from '@pancakeswap-libs/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport useWeb3 from 'hooks/useWeb3'\r\n\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteTokenAdresses,\r\n  tokenAddresses,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const web3 = useWeb3()\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Title>{lpSymbol} </Title>\r\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance}</Earned>\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\r\n          <Title>{lpSymbol}</Title>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\r\n            {TranslateString(999, 'Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {TranslateString(999, 'Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { LinkExternal, Text } from '@pancakeswap-libs/uikit'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { communityFarms } from 'config/constants'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\nconst Container = styled.div`\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity }) => {\r\n  const farm = details\r\n\r\n  const TranslateString = useI18n()\r\n  const { quoteTokenAdresses, tokenAddresses, tokenSymbol, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, tokenAddresses })\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const bsc = `https://bscscan.com/address/${lpAddress}`\r\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\r\n  const isCommunityFarm = communityFarms.includes(tokenSymbol)\r\n\r\n  return (\r\n    <Container>\r\n      <InfoContainer>\r\n        <StakeContainer>\r\n          <StyledLinkExternal href={`https://dex.aquaprotocol.com/#/add/${liquidityUrlPathParts}`}>\r\n            {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\r\n          </StyledLinkExternal>\r\n        </StakeContainer>\r\n        <StyledLinkExternal href={bsc}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{TranslateString(736, 'APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} />\r\n        <StakedAction {...farm} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  translationId: number\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APY: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowProps> = (props) => {\r\n  const {apr, farm, earned, multiplier, liquidity, details } = props\r\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelToggled(!actionPanelToggled)\r\n  }\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelToggled} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={TranslateString(736, 'APR')}>\r\n                        <Apr {...props.apr} hideButton={isMobile} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout\r\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\r\n                      >\r\n                        {React.createElement(cells[key], props[key])}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={TranslateString(1072, 'Earned')}>\r\n                <Earned {...props.earned} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={TranslateString(736, 'APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelToggled} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {actionPanelToggled && details && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n}\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const TranslateString = useI18n()\r\n  const { data, columns } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {TranslateString(999, 'To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst FarmTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(1198, 'Live')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(388, 'Finished')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React, { useState, useRef } from 'react'\r\nimport { Input } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 234px;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  value: string\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const inputEl = useRef(null)\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          ref={inputEl}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Search farms\"\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap-libs/uikit'\r\nimport { ViewMode } from '../types'\r\n\r\ninterface ToogleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToogleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOption, setSelectedOption] = useState(options[0])\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    setSelectedOption(option)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(option)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{selectedOption.label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedOption.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Heading, RowType, Toggle, Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { orderBy } from 'lodash'\r\n\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport SearchInput from './components/SearchInput'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\nimport Select, { OptionProps } from './components/Select/Select'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  padding: 32px 0px;\r\n  // background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = useState(ViewMode.CARD)\r\n  const ethPriceUsd = usePriceEthBusd()\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stackedOnly, setStackedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\r\n\r\n  const stackedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        return orderBy(farms, 'apy', 'desc')\r\n      case 'multiplier':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.multiplier.slice(0, -1)), 'desc')\r\n      case 'earned':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\r\n      case 'liquidity':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n      default:\r\n        return farms\r\n    }\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmWithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n          return farm\r\n        }\r\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n        // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n        let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\r\n          apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken)\r\n        } else if (farm.dual) {\r\n          const cakeApy =\r\n            farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\r\n          const dualApy =\r\n            farm.tokenPriceVsQuote &&\r\n            new BigNumber(farm.tokenPriceVsQuote)\r\n              .times(farm.dual.rewardPerBlock)\r\n              .times(BLOCKS_PER_YEAR)\r\n              .div(farm.lpTotalInQuoteToken)\r\n\r\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\r\n        }\r\n\r\n        let liquidity = farm.lpTotalInQuoteToken\r\n\r\n        if (!farm.lpTotalInQuoteToken) {\r\n          liquidity = null\r\n        }\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          liquidity = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n        }\r\n        if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          liquidity = cakePrice.times(farm.lpTotalInQuoteToken)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          liquidity = ethPriceUsd.times(farm.lpTotalInQuoteToken)\r\n        }\r\n\r\n        return { ...farm, apy, liquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = query.toLowerCase()\r\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\r\n          if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\r\n            return true\r\n          }\r\n\r\n          return false\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPY\r\n    },\r\n    [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const isActive = !pathname.includes('history')\r\n  let farmsStaked = []\r\n  if (isActive) {\r\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\r\n  } else {\r\n    farmsStaked = farmsList(inactiveFarms)\r\n  }\r\n\r\n  farmsStaked = sortFarms(farmsStaked)\r\n\r\n  const rowData = farmsStaked.map((farm) => {\r\n    const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value:\r\n          farm.apy &&\r\n          farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        quoteTokenAdresses,\r\n        quoteTokenSymbol,\r\n        tokenAddresses,\r\n        cakePrice,\r\n        originalValue: farm.apy,\r\n      },\r\n      farm: {\r\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n      },\r\n      earned: {\r\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\r\n        // pid: farm.pid,  //me commented thids due to build error\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                ethPrice={ethPriceUsd}\r\n                account={account}\r\n                removed={false}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                ethPrice={ethPriceUsd}\r\n                account={account}\r\n                removed\r\n              />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {TranslateString(999, 'Farms')}\r\n        </Heading>\r\n        <Heading size=\"lg\" color=\"text\">\r\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\r\n        </Heading>\r\n      </Header>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\r\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text>SORT BY</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: 'Hot',\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: 'APR',\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: 'Multiplier',\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: 'Earned',\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: 'Liquidity',\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text>SEARCH</Text>\r\n              <SearchInput onChange={handleChangeQuery} value={query} />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {/* <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}